#!/usr/bin/env bash
#
# This script imports API and demo documentation for various FEniCS
# components into the doc directory, adds the files to version control
# (only .rst, not .html), builds the html, and copies to the main
# build tree for (later) upload together with rest of the web pages.
#
# Copyright (C) 2011 Anders Logg.
# Licensed under the GNU GPL version 3 or any later version.
#
# First added:  2011-06-14
# Last changed: 2013-09-11
#
# Modified by Anders Logg, 2011.

# Check that import directories are set
if [ x$DOLFIN_DIR == x ]; then
    echo "* Error: DOLFIN_DIR has not been set"
    exit 1
fi
if [ x$UFL_DIR == x ]; then
    echo "* Error: UFL_DIR has not been set"
    exit 1
fi

# Get version numbers. We do this manually rather than by calling
# $PATH/bin/$PACKAGE-version so we don't need to require that packages
# are installed and the $PACKAGE-version script is in $PATH to test
# the documentation. (Only $DOLFIN_DIR and $UFL_DIR need to be set.)
UFL_VERSION=`grep __version__ $UFL_DIR/ufl/__init__.py | cut -d'"' -f2`
DOLFIN_VERSION_MAJOR=`grep "set(DOLFIN_VERSION_" $DOLFIN_DIR/CMakeLists.txt | grep _MAJOR | cut -d'"' -f2`
DOLFIN_VERSION_MINOR=`grep "set(DOLFIN_VERSION_" $DOLFIN_DIR/CMakeLists.txt | grep _MINOR | cut -d'"' -f2`
DOLFIN_VERSION_MICRO=`grep "set(DOLFIN_VERSION_" $DOLFIN_DIR/CMakeLists.txt | grep _MICRO | cut -d'"' -f2`
DOLFIN_VERSION=$DOLFIN_VERSION_MAJOR.$DOLFIN_VERSION_MINOR.$DOLFIN_VERSION_MICRO
echo "UFL version:    $UFL_VERSION"
echo "DOLFIN version: $DOLFIN_VERSION"

# Rsync command
RSYNC="rsync -a --delete --exclude build --exclude scripts"

# Command for import doc
import_doc()
{
    # Get arguments
    package=$1
    PACKAGE=`echo $package | tr 'a-z' 'A-Z'`
    DOCDIR=$2
    SUFFIX=$3
    PACKAGE_VERSION=$4

    # Get package directory
    PACKAGE_DIR_VARIABLE="${PACKAGE}_DIR"
    PACKAGE_DIR=`printenv $PACKAGE_DIR_VARIABLE`

    # Check that package directory has been set
    if [ x$PACKAGE_DIR == x ]; then
        echo "* Error: $PACKAGE_DIR_VARIABLE has not been set"
        exit 1
    fi

    # Modify version number if necessary (+ --> dev)
    if [[ $PACKAGE_VERSION == *+ ]]; then
        PACKAGE_VERSION="dev"
    fi

    # Set directories for documentation
    DOC_FROM="$PACKAGE_DIR/$DOCDIR/"
    DOC_TO="docs/$package/$PACKAGE_VERSION/$SUFFIX"

    echo ""
    echo "Copying documentation for $PACKAGE version $PACKAGE_VERSION"
    echo "  from: $DOC_FROM"
    echo "  to:   $DOC_TO"

    # Copy documentation files
    mkdir -p $DOC_TO
    $RSYNC $DOC_FROM $DOC_TO

    # Copy common FEniCS template
    mkdir -p $DOC_TO/source/_themes/fenics/
    $RSYNC source/_themes/fenics/ $DOC_TO/source/_themes/fenics/

    # Set 'fenics' theme in conf.py
    sed -i "s/^html_theme = .*/html_theme = 'fenics'/" $DOC_TO/source/conf.py

    # FIXME: Commented out until Harish fixes the styling
    # Display toc
    #sed -i "s/^{% block sidebar2 %}{% endblock %}//" $DOC_TO/source/_themes/fenics/layout.html

    # Add to git
    git add $DOC_TO/Makefile $DOC_TO/source
    git commit -m "Update documentation for $PACKAGE version $PACKAGE_VERSION" $DOC_TO

    # Build HTML
    pushd . > /dev/null
    cd $DOC_TO
    make html
    popd > /dev/null

    # Copy HTML to main build tree
    HTML_DIR="build/html/documentation/$package/$PACKAGE_VERSION/$SUFFIX"
    mkdir -p $HTML_DIR
    $RSYNC $DOC_TO/build/html/ $HTML_DIR
}

# Import documentation for all packages
import_doc dolfin build/doc/sphinx-cpp    cpp    $DOLFIN_VERSION
import_doc dolfin build/doc/sphinx-python python $DOLFIN_VERSION
import_doc ufl    doc/sphinx                     $UFL_VERSION
