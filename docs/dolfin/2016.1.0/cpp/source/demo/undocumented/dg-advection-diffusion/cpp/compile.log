This is FFC, the FEniCS Form Compiler, version 2016.1.0.
UFC backend version 2016.1.0, signature 1b14b3cad537cb974523d529928ad9bde02ef657.
For further information, visit https://bitbucket.org/fenics-project/ffc/.

Compiling form Projection

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    0
  Coefficients:              '[]'
  Unique elements:           'CG1(?), Vector<2 x CG1(?)>'
  Unique sub elements:       'CG1(?), Vector<2 x CG1(?)>'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 0
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    1
  Coefficients:              '[w_0]'
  Unique elements:           'CG1(?), DG1(?), Vector<2 x CG1(?)>'
  Unique sub elements:       'CG1(?), DG1(?), Vector<2 x CG1(?)>'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 1
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.105609 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 3 elements
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 3 dofmaps
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 1 coordinate mappings
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.000776 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 0 dims = [] indices = [[]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 0 dims = [] indices = [[]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Reusing element from cache
  Reusing element from cache
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  9 entries computed in 0.0012 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.0122631 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  
Compiler stage 3 finished in 0.000249147 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 3 element(s)
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Generating code for 3 dofmap(s)
  Generating code for 1 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.227631 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.000816107 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000735044 seconds.

FFC finished in 0.347793 seconds.
Output written to ./Projection.h.
This is FFC, the FEniCS Form Compiler, version 2016.1.0.
UFC backend version 2016.1.0, signature 1b14b3cad537cb974523d529928ad9bde02ef657.
For further information, visit https://bitbucket.org/fenics-project/ffc/.

Compiling element Velocity

Compiler stage 1: Analyzing elements(s)
---------------------------------------
  
Compiler stage 1 finished in 0.000303984 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 2 elements
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 2 dofmaps
  Reusing element from cache
  Reusing element from cache
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.203056 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  
Compiler stage 3 finished in 0.000339031 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 2 element(s)
  Generating code for 2 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.354416 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.000307083 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000663042 seconds.

FFC finished in 0.559677 seconds.
Output written to ./Velocity.h.
This is FFC, the FEniCS Form Compiler, version 2016.1.0.
UFC backend version 2016.1.0, signature 1b14b3cad537cb974523d529928ad9bde02ef657.
For further information, visit https://bitbucket.org/fenics-project/ffc/.

Compiling form AdvectionDiffusion

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:                 2
  Number of cell subdomains:           0
  Number of exterior_facet subdomains: 0
  Number of interior_facet subdomains: 0
  Rank:                                2
  Arguments:                           '(v_0, v_1)'
  Number of coefficients:              3
  Coefficients:                        '[w_0, w_2, w_3]'
  Unique elements:                     'DG1(?), Vector<2 x CG2(?)>, R0(?), Vector<2 
                                       x CG1(?)>'
  Unique sub elements:                 'DG1(?), Vector<2 x CG2(?)>, R0(?), Vector<2 
                                       x CG1(?)>, CG2(?), CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 3
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 3
  quadrature_degree: 3
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal FacetNormal.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 4
  quadrature_degree: 4
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal FacetNormal.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 4
  quadrature_degree: 4
  
  Geometric dimension:       2
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    1
  Coefficients:              '[w_1]'
  Unique elements:           'DG1(?), Vector<2 x CG1(?)>'
  Unique sub elements:       'DG1(?), Vector<2 x CG1(?)>, CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 1
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.268126 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 6 elements
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 6 dofmaps
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 1 coordinate mappings
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  432 entries computed in 0.00185 seconds
  Shape of reference tensor: (3, 3, 12, 2, 2)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 3 dims = [12, 2, 2] indices = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [3, 0, 0], [3, 0, 1], [3, 1, 0], [3, 1, 1], [4, 0, 0], [4, 0, 1], [4, 1, 0], [4, 1, 1], [5, 0, 0], [5, 0, 1], [5, 1, 0], [5, 1, 1], [6, 0, 0], [6, 0, 1], [6, 1, 0], [6, 1, 1], [7, 0, 0], [7, 0, 1], [7, 1, 0], [7, 1, 1], [8, 0, 0], [8, 0, 1], [8, 1, 0], [8, 1, 1], [9, 0, 0], [9, 0, 1], [9, 1, 0], [9, 1, 1], [10, 0, 0], [10, 0, 1], [10, 1, 0], [10, 1, 1], [11, 0, 0], [11, 0, 1], [11, 1, 0], [11, 1, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [12, 2, 2] indices = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [3, 0, 0], [3, 0, 1], [3, 1, 0], [3, 1, 1], [4, 0, 0], [4, 0, 1], [4, 1, 0], [4, 1, 1], [5, 0, 0], [5, 0, 1], [5, 1, 0], [5, 1, 1], [6, 0, 0], [6, 0, 1], [6, 1, 0], [6, 1, 1], [7, 0, 0], [7, 0, 1], [7, 1, 0], [7, 1, 1], [8, 0, 0], [8, 0, 1], [8, 1, 0], [8, 1, 1], [9, 0, 0], [9, 0, 1], [9, 1, 0], [9, 1, 1], [10, 0, 0], [10, 0, 1], [10, 1, 0], [10, 1, 1], [11, 0, 0], [11, 0, 1], [11, 1, 0], [11, 1, 1]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  36 entries computed in 0.00157 seconds
  Shape of reference tensor: (3, 3, 2, 1, 2)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 3 dims = [2, 1, 2] indices = [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [2, 1, 2] indices = [[0, 0, 0], [0, 0, 1], [1, 0, 0], [1, 0, 1]]
  External multi index:  rank = 1 dims = [2] indices = [[0], [1]]
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {VectorElement(FiniteElement('Lagrange', triangle, 2), dim=2): {None: {0: {(0, 0): array([[[  1.12757026e-16,   4.16333634e-17,   4.16333634e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  6.87298335e-01,  -9.71445147e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -4.85722573e-17,   1.38777878e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.23165367e-16,   0.00000000e+00,  -6.93889390e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.12757026e-16,   4.16333634e-17,   4.16333634e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,  -9.71445147e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -4.85722573e-17,   1.38777878e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.23165367e-16,   0.00000000e+00,  -6.93889390e-17]]])}, 1: {(0, 0): array([[[  6.87298335e-01,   8.32667268e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  9.36750677e-17,   8.32667268e-17,   9.71445147e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.77555756e-17,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.23165367e-16,   0.00000000e+00,  -6.93889390e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   8.32667268e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  9.36750677e-17,   8.32667268e-17,   9.71445147e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -2.77555756e-17,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.23165367e-16,   0.00000000e+00,  -6.93889390e-17]]])}, 2: {(0, 0): array([[[  6.87298335e-01,   4.16333634e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   1.38777878e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.77555756e-17,  -5.55111512e-17,  -5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   4.16333634e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   1.38777878e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -2.77555756e-17,  -5.55111512e-17,  -5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]]])}}}, VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2): {None: {0: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1., -1.],
          [ 0.,  0.,  0.]],
  
         [[ 1.,  1.,  1.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [-1., -1., -1.]],
  
         [[ 0.,  0.,  0.],
          [ 1.,  1.,  1.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]]]), (0, 0): array([[[  2.77555756e-17,   4.16333634e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.87298335e-01,   5.00000000e-01,   1.12701665e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.12701665e-01,   5.00000000e-01,   8.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  2.77555756e-17,   4.16333634e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.87298335e-01,   5.00000000e-01,   1.12701665e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.12701665e-01,   5.00000000e-01,   8.87298335e-01]]])}, 1: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1., -1.],
          [ 0.,  0.,  0.]],
  
         [[ 1.,  1.,  1.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [-1., -1., -1.]],
  
         [[ 0.,  0.,  0.],
          [ 1.,  1.,  1.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]]]), (0, 0): array([[[  8.87298335e-01,   5.00000000e-01,   1.12701665e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  2.77555756e-17,   4.16333634e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.12701665e-01,   5.00000000e-01,   8.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.87298335e-01,   5.00000000e-01,   1.12701665e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  2.77555756e-17,   4.16333634e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.12701665e-01,   5.00000000e-01,   8.87298335e-01]]])}, 2: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1., -1.],
          [ 0.,  0.,  0.]],
  
         [[ 1.,  1.,  1.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [-1., -1., -1.]],
  
         [[ 0.,  0.,  0.],
          [ 1.,  1.,  1.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]]]), (0, 0): array([[[ 0.88729833,  0.5       ,  0.11270167],
          [ 0.        ,  0.        ,  0.        ]],
  
         [[ 0.11270167,  0.5       ,  0.88729833],
          [ 0.        ,  0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ,  0.        ],
          [ 0.88729833,  0.5       ,  0.11270167]],
  
         [[ 0.        ,  0.        ,  0.        ],
          [ 0.11270167,  0.5       ,  0.88729833]],
  
         [[ 0.        ,  0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        ]]])}}}, FiniteElement('Discontinuous Lagrange', triangle, 1): {None: {0: {(0, 0): array([[  2.77555756e-17,   4.16333634e-17,   5.55111512e-17],
         [  8.87298335e-01,   5.00000000e-01,   1.12701665e-01],
         [  1.12701665e-01,   5.00000000e-01,   8.87298335e-01]])}, 1: {(0, 0): array([[  8.87298335e-01,   5.00000000e-01,   1.12701665e-01],
         [  2.77555756e-17,   4.16333634e-17,   5.55111512e-17],
         [  1.12701665e-01,   5.00000000e-01,   8.87298335e-01]])}, 2: {(0, 0): array([[ 0.88729833,  0.5       ,  0.11270167],
         [ 0.11270167,  0.5       ,  0.88729833],
         [ 0.        ,  0.        ,  0.        ]])}}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_f0': array([[  2.77555756e-17,   8.87298335e-01,   1.12701665e-01],
         [  4.16333634e-17,   5.00000000e-01,   5.00000000e-01],
         [  5.55111512e-17,   1.12701665e-01,   8.87298335e-01]]), 'FE0_f1': array([[  8.87298335e-01,   2.77555756e-17,   1.12701665e-01],
         [  5.00000000e-01,   4.16333634e-17,   5.00000000e-01],
         [  1.12701665e-01,   5.55111512e-17,   8.87298335e-01]]), 'FE0_f2': array([[ 0.88729833,  0.11270167,  0.        ],
         [ 0.5       ,  0.5       ,  0.        ],
         [ 0.11270167,  0.88729833,  0.        ]]), 'FE1_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f1_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE2_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   4.00000000e-01]]), 'FE1_f2_C0': array([[ 0.88729833,  0.11270167,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.5       ,  0.5       ,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.11270167,  0.88729833,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE1_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.88729833,  0.11270167,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.5       ,  0.5       ,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.11270167,  0.88729833,
           0.        ]]), 'FE2_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.12757026e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -4.85722573e-17,  -1.23165367e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,  -9.71445147e-17,   8.32667268e-17,
            1.00000000e+00,   1.38777878e-17,   0.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,   5.55111512e-17,  -6.93889390e-17]]), 'FE2_f0_C0': array([[  1.12757026e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -4.85722573e-17,  -1.23165367e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,  -9.71445147e-17,   8.32667268e-17,
            1.00000000e+00,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,   5.55111512e-17,  -6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f2_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f1_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C0': array([[  2.77555756e-17,   8.87298335e-01,   1.12701665e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,   5.00000000e-01,   5.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   1.12701665e-01,   8.87298335e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   8.87298335e-01,   1.12701665e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,   5.00000000e-01,   5.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   1.12701665e-01,   8.87298335e-01]]), 'FE1_f2_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE1_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE1_f1_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE2_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f1_C0': array([[  6.87298335e-01,   9.36750677e-17,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.23165367e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  8.32667268e-17,   8.32667268e-17,   8.32667268e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   9.71445147e-17,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,  -6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   9.36750677e-17,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.23165367e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            8.32667268e-17,   8.32667268e-17,   8.32667268e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   9.71445147e-17,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,  -6.93889390e-17]]), 'FE1_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            8.87298335e-01,   2.77555756e-17,   1.12701665e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.00000000e-01,   4.16333634e-17,   5.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.12701665e-01,   5.55111512e-17,   8.87298335e-01]]), 'FE1_f1_C0': array([[  8.87298335e-01,   2.77555756e-17,   1.12701665e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.00000000e-01,   4.16333634e-17,   5.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.12701665e-01,   5.55111512e-17,   8.87298335e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  tables: {'FE0_f0': array([[  2.77555756e-17,   8.87298335e-01,   1.12701665e-01],
         [  4.16333634e-17,   5.00000000e-01,   5.00000000e-01],
         [  5.55111512e-17,   1.12701665e-01,   8.87298335e-01]]), 'FE0_f1': array([[  8.87298335e-01,   2.77555756e-17,   1.12701665e-01],
         [  5.00000000e-01,   4.16333634e-17,   5.00000000e-01],
         [  1.12701665e-01,   5.55111512e-17,   8.87298335e-01]]), 'FE0_f2': array([[ 0.88729833,  0.11270167,  0.        ],
         [ 0.5       ,  0.5       ,  0.        ],
         [ 0.11270167,  0.88729833,  0.        ]]), 'FE1_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE2_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   4.00000000e-01]]), 'FE1_f2_C0': array([[ 0.88729833,  0.11270167,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.5       ,  0.5       ,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.11270167,  0.88729833,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE1_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.88729833,  0.11270167,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.5       ,  0.5       ,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.11270167,  0.88729833,
           0.        ]]), 'FE2_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.12757026e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -4.85722573e-17,  -1.23165367e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,  -9.71445147e-17,   8.32667268e-17,
            1.00000000e+00,   1.38777878e-17,   0.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,   5.55111512e-17,  -6.93889390e-17]]), 'FE2_f0_C0': array([[  1.12757026e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -4.85722573e-17,  -1.23165367e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,  -9.71445147e-17,   8.32667268e-17,
            1.00000000e+00,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,   5.55111512e-17,  -6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f0_C0': array([[  2.77555756e-17,   8.87298335e-01,   1.12701665e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,   5.00000000e-01,   5.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   1.12701665e-01,   8.87298335e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   8.87298335e-01,   1.12701665e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,   5.00000000e-01,   5.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   1.12701665e-01,   8.87298335e-01]]), 'FE1_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE2_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f1_C0': array([[  6.87298335e-01,   9.36750677e-17,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.23165367e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  8.32667268e-17,   8.32667268e-17,   8.32667268e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   9.71445147e-17,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,  -6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   9.36750677e-17,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.23165367e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            8.32667268e-17,   8.32667268e-17,   8.32667268e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   9.71445147e-17,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,  -6.93889390e-17]]), 'FE1_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            8.87298335e-01,   2.77555756e-17,   1.12701665e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.00000000e-01,   4.16333634e-17,   5.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.12701665e-01,   5.55111512e-17,   8.87298335e-01]]), 'FE1_f1_C0': array([[  8.87298335e-01,   2.77555756e-17,   1.12701665e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.00000000e-01,   4.16333634e-17,   5.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.12701665e-01,   5.55111512e-17,   8.87298335e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  name_map: {'FE1_f0_C1_D10': ['FE1_f1_C1_D10', 'FE1_f2_C1_D10'], 'FE1_f0_C0_D01': ['FE1_f1_C0_D01', 'FE1_f2_C0_D01'], 'FE1_f0_C1_D01': ['FE1_f1_C1_D01', 'FE1_f2_C1_D01'], 'FE1_f0_C0_D10': ['FE1_f1_C0_D10', 'FE1_f2_C0_D10']}
  
  inv_name_map: {'FE0_f0': 'FE0_f0', 'FE1_f1_C0_D10': 'FE1_f0_C0_D10', 'FE0_f2': 'FE0_f2', 'FE1_f0_C1_D01': 'FE1_f0_C1_D01', 'FE1_f2_C1_D01': 'FE1_f0_C1_D01', 'FE1_f1_C1_D10': 'FE1_f0_C1_D10', 'FE1_f2_C0_D10': 'FE1_f0_C0_D10', 'FE1_f2_C0': 'FE1_f2_C0', 'FE1_f2_C1': 'FE1_f2_C1', 'FE2_f0_C1': 'FE2_f0_C1', 'FE2_f0_C0': 'FE2_f0_C0', 'FE1_f2_C0_D01': 'FE1_f0_C0_D01', 'FE0_f1': 'FE0_f1', 'FE1_f0_C0_D10': 'FE1_f0_C0_D10', 'FE1_f1_C0_D01': 'FE1_f0_C0_D01', 'FE1_f0_C0': 'FE1_f0_C0', 'FE1_f0_C1': 'FE1_f0_C1', 'FE1_f2_C1_D10': 'FE1_f0_C1_D10', 'FE1_f0_C1_D10': 'FE1_f0_C1_D10', 'FE1_f1_C1_D01': 'FE1_f0_C1_D01', 'FE2_f2_C1': 'FE2_f2_C1', 'FE2_f2_C0': 'FE2_f2_C0', 'FE2_f1_C0': 'FE2_f1_C0', 'FE2_f1_C1': 'FE2_f1_C1', 'FE1_f0_C0_D01': 'FE1_f0_C0_D01', 'FE1_f1_C1': 'FE1_f1_C1', 'FE1_f1_C0': 'FE1_f1_C0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_f0': array([[ 0.88729833,  0.11270167],
         [ 0.5       ,  0.5       ],
         [ 0.11270167,  0.88729833]]), 'FE2_f0_C0': array([[ 0.68729833, -0.08729833,  0.4       ],
         [ 0.        ,  0.        ,  1.        ],
         [-0.08729833,  0.68729833,  0.4       ]]), 'FE1_f0_C0_D01': array([[-1.,  1.],
         [-1.,  1.],
         [-1.,  1.]])}
  
  QG-utils, psi_tables, name_map:
  {'FE0_f0': ('FE0_f0', (0, [1, 2]), False, False), 'FE1_f1_C0_D10': ('FE1_f0_C0_D01', (5, [0, 1]), False, False), 'FE0_f2': ('FE0_f0', (2, [0, 1]), False, False), 'FE1_f0_C1_D01': ('FE1_f0_C0_D01', (7, [3, 5]), False, False), 'FE1_f2_C1_D01': ('FE1_f0_C0_D01', (7, [3, 5]), False, False), 'FE1_f1_C1_D10': ('FE1_f0_C0_D01', (8, [3, 4]), False, False), 'FE1_f2_C0_D10': ('FE1_f0_C0_D01', (5, [0, 1]), False, False), 'FE1_f2_C0': ('FE0_f0', (11, [0, 1]), False, False), 'FE1_f2_C1': ('FE0_f0', (12, [3, 4]), False, False), 'FE2_f0_C1': ('FE2_f0_C0', (14, [7, 8, 9]), False, False), 'FE2_f0_C0': ('FE2_f0_C0', (13, [1, 2, 3]), False, False), 'FE1_f2_C0_D01': ('FE1_f0_C0_D01', (4, [0, 2]), False, False), 'FE0_f1': ('FE0_f0', (1, [0, 2]), False, False), 'FE1_f0_C0_D10': ('FE1_f0_C0_D01', (5, [0, 1]), False, False), 'FE1_f1_C0_D01': ('FE1_f0_C0_D01', (4, [0, 2]), False, False), 'FE1_f0_C0': ('FE0_f0', (3, [1, 2]), False, False), 'FE1_f0_C1': ('FE0_f0', (6, [4, 5]), False, False), 'FE1_f2_C1_D10': ('FE1_f0_C0_D01', (8, [3, 4]), False, False), 'FE1_f0_C1_D10': ('FE1_f0_C0_D01', (8, [3, 4]), False, False), 'FE1_f1_C1_D01': ('FE1_f0_C0_D01', (7, [3, 5]), False, False), 'FE2_f2_C1': ('FE2_f0_C0', (18, [6, 7, 11]), False, False), 'FE2_f2_C0': ('FE2_f0_C0', (17, [0, 1, 5]), False, False), 'FE2_f1_C0': ('FE2_f0_C0', (15, [0, 2, 4]), False, False), 'FE2_f1_C1': ('FE2_f0_C0', (16, [6, 8, 10]), False, False), 'FE1_f0_C0_D01': ('FE1_f0_C0_D01', (4, [0, 2]), False, False), 'FE1_f1_C1': ('FE0_f0', (10, [3, 5]), False, False), 'FE1_f1_C0': ('FE0_f0', (9, [0, 2]), False, False)}
  Transforming exterior facet integral 0
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 1
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 2
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {VectorElement(FiniteElement('Lagrange', triangle, 2), dim=2): {None: {0: {(0, 0): array([[[  1.12757026e-16,   4.16333634e-17,   4.16333634e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  6.87298335e-01,  -9.71445147e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -4.85722573e-17,   1.38777878e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.23165367e-16,   0.00000000e+00,  -6.93889390e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.12757026e-16,   4.16333634e-17,   4.16333634e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,  -9.71445147e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -4.85722573e-17,   1.38777878e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.23165367e-16,   0.00000000e+00,  -6.93889390e-17]]])}, 1: {(0, 0): array([[[  6.87298335e-01,   8.32667268e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  9.36750677e-17,   8.32667268e-17,   9.71445147e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.77555756e-17,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -1.23165367e-16,   0.00000000e+00,  -6.93889390e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   8.32667268e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  9.36750677e-17,   8.32667268e-17,   9.71445147e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   8.32667268e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -2.77555756e-17,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.23165367e-16,   0.00000000e+00,  -6.93889390e-17]]])}, 2: {(0, 0): array([[[  6.87298335e-01,   4.16333634e-17,  -8.72983346e-02],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -8.72983346e-02,   1.38777878e-17,   6.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.77555756e-17,  -5.55111512e-17,  -5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  4.00000000e-01,   1.00000000e+00,   4.00000000e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  6.87298335e-01,   4.16333634e-17,  -8.72983346e-02]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -8.72983346e-02,   1.38777878e-17,   6.87298335e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -2.77555756e-17,  -5.55111512e-17,  -5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  4.00000000e-01,   1.00000000e+00,   4.00000000e-01]]])}}}, VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2): {None: {0: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1., -1.],
          [ 0.,  0.,  0.]],
  
         [[ 1.,  1.,  1.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [-1., -1., -1.]],
  
         [[ 0.,  0.,  0.],
          [ 1.,  1.,  1.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]]]), (0, 0): array([[[  2.77555756e-17,   4.16333634e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.87298335e-01,   5.00000000e-01,   1.12701665e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.12701665e-01,   5.00000000e-01,   8.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  2.77555756e-17,   4.16333634e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.87298335e-01,   5.00000000e-01,   1.12701665e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.12701665e-01,   5.00000000e-01,   8.87298335e-01]]])}, 1: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1., -1.],
          [ 0.,  0.,  0.]],
  
         [[ 1.,  1.,  1.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [-1., -1., -1.]],
  
         [[ 0.,  0.,  0.],
          [ 1.,  1.,  1.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]]]), (0, 0): array([[[  8.87298335e-01,   5.00000000e-01,   1.12701665e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  2.77555756e-17,   4.16333634e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.12701665e-01,   5.00000000e-01,   8.87298335e-01],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.87298335e-01,   5.00000000e-01,   1.12701665e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  2.77555756e-17,   4.16333634e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.12701665e-01,   5.00000000e-01,   8.87298335e-01]]])}, 2: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1., -1.],
          [ 0.,  0.,  0.]],
  
         [[ 1.,  1.,  1.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]],
  
         [[ 0.,  0.,  0.],
          [-1., -1., -1.]],
  
         [[ 0.,  0.,  0.],
          [ 1.,  1.,  1.]],
  
         [[ 0.,  0.,  0.],
          [ 0.,  0.,  0.]]]), (0, 0): array([[[ 0.88729833,  0.5       ,  0.11270167],
          [ 0.        ,  0.        ,  0.        ]],
  
         [[ 0.11270167,  0.5       ,  0.88729833],
          [ 0.        ,  0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ,  0.        ],
          [ 0.88729833,  0.5       ,  0.11270167]],
  
         [[ 0.        ,  0.        ,  0.        ],
          [ 0.11270167,  0.5       ,  0.88729833]],
  
         [[ 0.        ,  0.        ,  0.        ],
          [ 0.        ,  0.        ,  0.        ]]])}}}, FiniteElement('Real', triangle, 0): {None: {0: {(0, 0): array([[ 1.,  1.,  1.]])}, 1: {(0, 0): array([[ 1.,  1.,  1.]])}, 2: {(0, 0): array([[ 1.,  1.,  1.]])}}}, FiniteElement('Discontinuous Lagrange', triangle, 1): {None: {0: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1., -1.],
         [ 1.,  1.,  1.],
         [ 0.,  0.,  0.]]), (0, 0): array([[  2.77555756e-17,   4.16333634e-17,   5.55111512e-17],
         [  8.87298335e-01,   5.00000000e-01,   1.12701665e-01],
         [  1.12701665e-01,   5.00000000e-01,   8.87298335e-01]])}, 1: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1., -1.],
         [ 1.,  1.,  1.],
         [ 0.,  0.,  0.]]), (0, 0): array([[  8.87298335e-01,   5.00000000e-01,   1.12701665e-01],
         [  2.77555756e-17,   4.16333634e-17,   5.55111512e-17],
         [  1.12701665e-01,   5.00000000e-01,   8.87298335e-01]])}, 2: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1., -1.],
         [ 1.,  1.,  1.],
         [ 0.,  0.,  0.]]), (0, 0): array([[ 0.88729833,  0.5       ,  0.11270167],
         [ 0.11270167,  0.5       ,  0.88729833],
         [ 0.        ,  0.        ,  0.        ]])}}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE2_f1_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE2_f2_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f0': array([[  2.77555756e-17,   8.87298335e-01,   1.12701665e-01],
         [  4.16333634e-17,   5.00000000e-01,   5.00000000e-01],
         [  5.55111512e-17,   1.12701665e-01,   8.87298335e-01]]), 'FE0_f1': array([[  8.87298335e-01,   2.77555756e-17,   1.12701665e-01],
         [  5.00000000e-01,   4.16333634e-17,   5.00000000e-01],
         [  1.12701665e-01,   5.55111512e-17,   8.87298335e-01]]), 'FE0_f2': array([[ 0.88729833,  0.11270167,  0.        ],
         [ 0.5       ,  0.5       ,  0.        ],
         [ 0.11270167,  0.88729833,  0.        ]]), 'FE2_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE0_f1_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE0_f2_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE2_f2_C0': array([[ 0.88729833,  0.11270167,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.5       ,  0.5       ,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.11270167,  0.88729833,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE2_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   8.87298335e-01,   1.12701665e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,   5.00000000e-01,   5.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   1.12701665e-01,   8.87298335e-01]]), 'FE2_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE3_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   9.36750677e-17,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.23165367e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            8.32667268e-17,   8.32667268e-17,   8.32667268e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   9.71445147e-17,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,  -6.93889390e-17]]), 'FE3_f1_C0': array([[  6.87298335e-01,   9.36750677e-17,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.23165367e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  8.32667268e-17,   8.32667268e-17,   8.32667268e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   9.71445147e-17,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,  -6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f0_C0': array([[  2.77555756e-17,   8.87298335e-01,   1.12701665e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,   5.00000000e-01,   5.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   1.12701665e-01,   8.87298335e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f2_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE0_f0_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE2_f1_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f2': array([[ 1.],
         [ 1.],
         [ 1.]]), 'FE1_f1': array([[ 1.],
         [ 1.],
         [ 1.]]), 'FE1_f0': array([[ 1.],
         [ 1.],
         [ 1.]]), 'FE3_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f2_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE2_f1_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE0_f2_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE2_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.88729833,  0.11270167,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.5       ,  0.5       ,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.11270167,  0.88729833,
           0.        ]]), 'FE2_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f1_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE0_f0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE2_f2_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE3_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   4.00000000e-01]]), 'FE2_f1_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f1_C0': array([[  8.87298335e-01,   2.77555756e-17,   1.12701665e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.00000000e-01,   4.16333634e-17,   5.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.12701665e-01,   5.55111512e-17,   8.87298335e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            8.87298335e-01,   2.77555756e-17,   1.12701665e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.00000000e-01,   4.16333634e-17,   5.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.12701665e-01,   5.55111512e-17,   8.87298335e-01]]), 'FE3_f0_C0': array([[  1.12757026e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -4.85722573e-17,  -1.23165367e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,  -9.71445147e-17,   8.32667268e-17,
            1.00000000e+00,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,   5.55111512e-17,  -6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE3_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.12757026e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -4.85722573e-17,  -1.23165367e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,  -9.71445147e-17,   8.32667268e-17,
            1.00000000e+00,   1.38777878e-17,   0.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,   5.55111512e-17,  -6.93889390e-17]])}
  
  tables: {'FE0_f0': array([[  2.77555756e-17,   8.87298335e-01,   1.12701665e-01],
         [  4.16333634e-17,   5.00000000e-01,   5.00000000e-01],
         [  5.55111512e-17,   1.12701665e-01,   8.87298335e-01]]), 'FE0_f1': array([[  8.87298335e-01,   2.77555756e-17,   1.12701665e-01],
         [  5.00000000e-01,   4.16333634e-17,   5.00000000e-01],
         [  1.12701665e-01,   5.55111512e-17,   8.87298335e-01]]), 'FE0_f2': array([[ 0.88729833,  0.11270167,  0.        ],
         [ 0.5       ,  0.5       ,  0.        ],
         [ 0.11270167,  0.88729833,  0.        ]]), 'FE2_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE2_f2_C0': array([[ 0.88729833,  0.11270167,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.5       ,  0.5       ,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.11270167,  0.88729833,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE2_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.77555756e-17,   8.87298335e-01,   1.12701665e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,   5.00000000e-01,   5.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   1.12701665e-01,   8.87298335e-01]]), 'FE2_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE3_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,   9.36750677e-17,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.23165367e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            8.32667268e-17,   8.32667268e-17,   8.32667268e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   9.71445147e-17,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,  -6.93889390e-17]]), 'FE3_f1_C0': array([[  6.87298335e-01,   9.36750677e-17,  -8.72983346e-02,
           -2.77555756e-17,   4.00000000e-01,  -1.23165367e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  8.32667268e-17,   8.32667268e-17,   8.32667268e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   9.71445147e-17,   6.87298335e-01,
            0.00000000e+00,   4.00000000e-01,  -6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f0_C0': array([[  2.77555756e-17,   8.87298335e-01,   1.12701665e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,   5.00000000e-01,   5.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   1.12701665e-01,   8.87298335e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE0_f0_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f0': array([[ 1.],
         [ 1.],
         [ 1.]]), 'FE3_f2_C0': array([[  6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   4.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE2_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.88729833,  0.11270167,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.5       ,  0.5       ,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.11270167,  0.88729833,
           0.        ]]), 'FE2_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE3_f2_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            6.87298335e-01,  -8.72983346e-02,   0.00000000e+00,
            0.00000000e+00,  -2.77555756e-17,   4.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -8.72983346e-02,   6.87298335e-01,   0.00000000e+00,
            0.00000000e+00,  -5.55111512e-17,   4.00000000e-01]]), 'FE2_f1_C0': array([[  8.87298335e-01,   2.77555756e-17,   1.12701665e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.00000000e-01,   4.16333634e-17,   5.00000000e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  1.12701665e-01,   5.55111512e-17,   8.87298335e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE2_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            8.87298335e-01,   2.77555756e-17,   1.12701665e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.00000000e-01,   4.16333634e-17,   5.00000000e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.12701665e-01,   5.55111512e-17,   8.87298335e-01]]), 'FE3_f0_C0': array([[  1.12757026e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -4.85722573e-17,  -1.23165367e-16,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,  -9.71445147e-17,   8.32667268e-17,
            1.00000000e+00,   1.38777878e-17,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  4.16333634e-17,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,   5.55111512e-17,  -6.93889390e-17,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE3_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            1.12757026e-16,   6.87298335e-01,  -8.72983346e-02,
            4.00000000e-01,  -4.85722573e-17,  -1.23165367e-16],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,  -9.71445147e-17,   8.32667268e-17,
            1.00000000e+00,   1.38777878e-17,   0.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            4.16333634e-17,  -8.72983346e-02,   6.87298335e-01,
            4.00000000e-01,   5.55111512e-17,  -6.93889390e-17]])}
  
  name_map: {'FE1_f0': ['FE1_f1', 'FE1_f2'], 'FE2_f0_C1_D10': ['FE2_f1_C1_D10', 'FE2_f2_C1_D10'], 'FE2_f0_C1_D01': ['FE2_f1_C1_D01', 'FE2_f2_C1_D01'], 'FE0_f0_D01': ['FE0_f1_D01', 'FE0_f2_D01'], 'FE0_f0_D10': ['FE0_f1_D10', 'FE0_f2_D10'], 'FE2_f0_C0_D10': ['FE2_f1_C0_D10', 'FE2_f2_C0_D10'], 'FE2_f0_C0_D01': ['FE2_f1_C0_D01', 'FE2_f2_C0_D01']}
  
  inv_name_map: {'FE2_f1_C1_D01': 'FE2_f0_C1_D01', 'FE2_f2_C0_D10': 'FE2_f0_C0_D10', 'FE0_f0': 'FE0_f0', 'FE0_f1': 'FE0_f1', 'FE0_f2': 'FE0_f2', 'FE2_f0_C1_D01': 'FE2_f0_C1_D01', 'FE0_f1_D10': 'FE0_f0_D10', 'FE0_f2_D10': 'FE0_f0_D10', 'FE2_f0_C0_D10': 'FE2_f0_C0_D10', 'FE2_f0_C1': 'FE2_f0_C1', 'FE2_f0_C0_D01': 'FE2_f0_C0_D01', 'FE3_f1_C1': 'FE3_f1_C1', 'FE3_f1_C0': 'FE3_f1_C0', 'FE2_f0_C0': 'FE2_f0_C0', 'FE2_f2_C1_D01': 'FE2_f0_C1_D01', 'FE0_f0_D10': 'FE0_f0_D10', 'FE2_f1_C0_D10': 'FE2_f0_C0_D10', 'FE1_f2': 'FE1_f0', 'FE1_f1': 'FE1_f0', 'FE1_f0': 'FE1_f0', 'FE3_f2_C0': 'FE3_f2_C0', 'FE2_f2_C0_D01': 'FE2_f0_C0_D01', 'FE2_f0_C1_D10': 'FE2_f0_C1_D10', 'FE2_f1_C1_D10': 'FE2_f0_C1_D10', 'FE0_f2_D01': 'FE0_f0_D01', 'FE2_f2_C1': 'FE2_f2_C1', 'FE2_f2_C0': 'FE2_f2_C0', 'FE0_f1_D01': 'FE0_f0_D01', 'FE0_f0_D01': 'FE0_f0_D01', 'FE2_f2_C1_D10': 'FE2_f0_C1_D10', 'FE3_f2_C1': 'FE3_f2_C1', 'FE2_f1_C0_D01': 'FE2_f0_C0_D01', 'FE2_f1_C0': 'FE2_f1_C0', 'FE2_f1_C1': 'FE2_f1_C1', 'FE3_f0_C0': 'FE3_f0_C0', 'FE3_f0_C1': 'FE3_f0_C1'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_f0': array([[ 0.88729833,  0.11270167],
         [ 0.5       ,  0.5       ],
         [ 0.11270167,  0.88729833]]), 'FE1_f0': array([[ 1.],
         [ 1.],
         [ 1.]]), 'FE0_f0_D01': array([[-1.,  1.],
         [-1.,  1.],
         [-1.,  1.]]), 'FE3_f0_C0': array([[ 0.68729833, -0.08729833,  0.4       ],
         [ 0.        ,  0.        ,  1.        ],
         [-0.08729833,  0.68729833,  0.4       ]])}
  
  QG-utils, psi_tables, name_map:
  {'FE2_f1_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE2_f2_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE0_f0': ('FE0_f0', (0, [1, 2]), False, False), 'FE0_f1': ('FE0_f0', (3, [0, 2]), False, False), 'FE0_f2': ('FE0_f0', (4, [0, 1]), False, False), 'FE2_f0_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE0_f1_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE0_f2_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE2_f0_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE2_f0_C1': ('FE0_f0', (8, [4, 5]), False, False), 'FE2_f0_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE3_f1_C1': ('FE3_f0_C0', (18, [6, 8, 10]), False, False), 'FE3_f1_C0': ('FE3_f0_C0', (17, [0, 2, 4]), False, False), 'FE2_f0_C0': ('FE0_f0', (5, [1, 2]), False, False), 'FE2_f2_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE0_f0_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE2_f1_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE1_f2': ('FE1_f0', (), False, True), 'FE1_f1': ('FE1_f0', (), False, True), 'FE1_f0': ('FE1_f0', (), False, True), 'FE3_f2_C0': ('FE3_f0_C0', (19, [0, 1, 5]), False, False), 'FE2_f2_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE2_f0_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE2_f1_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE0_f2_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE2_f2_C1': ('FE0_f0', (14, [3, 4]), False, False), 'FE2_f2_C0': ('FE0_f0', (13, [0, 1]), False, False), 'FE0_f1_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE0_f0_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE2_f2_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE3_f2_C1': ('FE3_f0_C0', (20, [6, 7, 11]), False, False), 'FE2_f1_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE2_f1_C0': ('FE0_f0', (11, [0, 2]), False, False), 'FE2_f1_C1': ('FE0_f0', (12, [3, 5]), False, False), 'FE3_f0_C0': ('FE3_f0_C0', (15, [1, 2, 3]), False, False), 'FE3_f0_C1': ('FE3_f0_C0', (16, [7, 8, 9]), False, False)}
  Transforming interior facet integral (0, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (0, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (0, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.000855 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.535893 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimising expressions for facet integral 0
  Optimising expressions for facet integral 1
  Optimising expressions for facet integral 2
  Optimising expressions for facet integral (0, 0)
  Optimising expressions for facet integral (0, 1)
  Optimising expressions for facet integral (0, 2)
  Optimising expressions for facet integral (1, 0)
  Optimising expressions for facet integral (1, 1)
  Optimising expressions for facet integral (1, 2)
  Optimising expressions for facet integral (2, 0)
  Optimising expressions for facet integral (2, 1)
  Optimising expressions for facet integral (2, 2)
  
Compiler stage 3 finished in 0.069833 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 6 element(s)
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp0
  Removing unused variable: Y
  Removing unused variable: X
  Removing unused variable: C1
  Removing unused variable: C0
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Generating code for 6 dofmap(s)
  Generating code for 1 coordinate_mapping(s)
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Removing unused variable: facet_area
  Removing unused variable: facet_area
  Removing unused variable: n_11
  Removing unused variable: n_10
  Generating code for forms
  
Compiler stage 4 finished in 0.475217 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.000929117 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.00102401 seconds.

FFC finished in 1.35152 seconds.
Output written to ./AdvectionDiffusion.h.
