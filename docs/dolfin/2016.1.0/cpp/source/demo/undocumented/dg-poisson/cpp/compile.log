This is FFC, the FEniCS Form Compiler, version 2016.1.0.
UFC backend version 2016.1.0, signature 1b14b3cad537cb974523d529928ad9bde02ef657.
For further information, visit https://bitbucket.org/fenics-project/ffc/.

Compiling form Poisson

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:                 2
  Number of cell subdomains:           0
  Number of exterior_facet subdomains: 2
  Number of interior_facet subdomains: 0
  Rank:                                2
  Arguments:                           '(v_0, v_1)'
  Number of coefficients:              0
  Coefficients:                        '[]'
  Unique elements:                     'DG1(?), Vector<2 x CG1(?)>'
  Unique sub elements:                 'DG1(?), Vector<2 x CG1(?)>, CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 2
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 0
  quadrature_degree: 0
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for expression Division.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal FacetNormal.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
  Geometric dimension:                 2
  Number of cell subdomains:           0
  Number of exterior_facet subdomains: 3
  Rank:                                1
  Arguments:                           '(v_0)'
  Number of coefficients:              3
  Coefficients:                        '[w_0, w_1, w_2]'
  Unique elements:                     'DG1(?), Vector<2 x CG1(?)>'
  Unique sub elements:                 'DG1(?), Vector<2 x CG1(?)>, CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 1
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for expression Division.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 1
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.111267 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 3 elements
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 3 dofmaps
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 1 coordinate mappings
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  36 entries computed in 0.000697 seconds
  Shape of reference tensor: (3, 3, 2, 2)
  Primary multi index:   rank = 2 dims = [3, 3] indices = [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2], [2, 0], [2, 1], [2, 2]]
  Secondary multi index: rank = 2 dims = [2, 2] indices = [[0, 0], [0, 1], [1, 0], [1, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 2 dims = [2, 2] indices = [[0, 0], [0, 1], [1, 0], [1, 1]]
  External multi index:  rank = 1 dims = [2] indices = [[0], [1]]
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {2: {VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2): {None: {0: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[ -2.08166817e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  7.88675135e-01,   2.11324865e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  2.11324865e-01,   7.88675135e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -2.08166817e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  7.88675135e-01,   2.11324865e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  2.11324865e-01,   7.88675135e-01]]])}, 1: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[  7.88675135e-01,   2.11324865e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.08166817e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  2.11324865e-01,   7.88675135e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  7.88675135e-01,   2.11324865e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -2.08166817e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  2.11324865e-01,   7.88675135e-01]]])}, 2: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[ 0.78867513,  0.21132487],
          [ 0.        ,  0.        ]],
  
         [[ 0.21132487,  0.78867513],
          [ 0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ],
          [ 0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ],
          [ 0.78867513,  0.21132487]],
  
         [[ 0.        ,  0.        ],
          [ 0.21132487,  0.78867513]],
  
         [[ 0.        ,  0.        ],
          [ 0.        ,  0.        ]]])}}}, FiniteElement('Discontinuous Lagrange', triangle, 1): {None: {0: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[ -2.08166817e-17,   5.55111512e-17],
         [  7.88675135e-01,   2.11324865e-01],
         [  2.11324865e-01,   7.88675135e-01]])}, 1: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[  7.88675135e-01,   2.11324865e-01],
         [ -2.08166817e-17,   5.55111512e-17],
         [  2.11324865e-01,   7.88675135e-01]])}, 2: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[ 0.78867513,  0.21132487],
         [ 0.21132487,  0.78867513],
         [ 0.        ,  0.        ]])}}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_f0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f1': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE0_f2': array([[ 0.78867513,  0.21132487,  0.        ],
         [ 0.21132487,  0.78867513,  0.        ]]), 'FE1_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f1_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE0_f1_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE0_f2_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f2_C0': array([[ 0.78867513,  0.21132487,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.21132487,  0.78867513,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE1_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.78867513,  0.21132487,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.21132487,  0.78867513,
           0.        ]]), 'FE1_f2_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f0_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f1_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f2_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE1_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE1_f1_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f1_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE0_f0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE1_f1_C0': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  tables: {'FE0_f0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f1': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE0_f2': array([[ 0.78867513,  0.21132487,  0.        ],
         [ 0.21132487,  0.78867513,  0.        ]]), 'FE1_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C0': array([[ 0.78867513,  0.21132487,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.21132487,  0.78867513,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE1_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.78867513,  0.21132487,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.21132487,  0.78867513,
           0.        ]]), 'FE0_f0_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f0_C0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE1_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE0_f0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE1_f1_C0': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  name_map: {'FE0_f0_D01': ['FE0_f1_D01', 'FE0_f2_D01'], 'FE1_f0_C1_D01': ['FE1_f1_C1_D01', 'FE1_f2_C1_D01'], 'FE0_f0_D10': ['FE0_f1_D10', 'FE0_f2_D10'], 'FE1_f0_C1_D10': ['FE1_f1_C1_D10', 'FE1_f2_C1_D10'], 'FE1_f0_C0_D01': ['FE1_f1_C0_D01', 'FE1_f2_C0_D01'], 'FE1_f0_C0_D10': ['FE1_f1_C0_D10', 'FE1_f2_C0_D10']}
  
  inv_name_map: {'FE0_f0': 'FE0_f0', 'FE1_f1_C0_D10': 'FE1_f0_C0_D10', 'FE0_f2': 'FE0_f2', 'FE1_f0_C1_D01': 'FE1_f0_C1_D01', 'FE1_f2_C1_D01': 'FE1_f0_C1_D01', 'FE1_f1_C1_D10': 'FE1_f0_C1_D10', 'FE0_f1_D10': 'FE0_f0_D10', 'FE0_f2_D10': 'FE0_f0_D10', 'FE1_f2_C0': 'FE1_f2_C0', 'FE1_f2_C1': 'FE1_f2_C1', 'FE1_f2_C0_D01': 'FE1_f0_C0_D01', 'FE0_f1': 'FE0_f1', 'FE0_f0_D10': 'FE0_f0_D10', 'FE1_f0_C0_D10': 'FE1_f0_C0_D10', 'FE1_f1_C0_D01': 'FE1_f0_C0_D01', 'FE1_f0_C0': 'FE1_f0_C0', 'FE1_f0_C1': 'FE1_f0_C1', 'FE0_f2_D01': 'FE0_f0_D01', 'FE1_f2_C1_D10': 'FE1_f0_C1_D10', 'FE1_f0_C1_D10': 'FE1_f0_C1_D10', 'FE1_f1_C1_D01': 'FE1_f0_C1_D01', 'FE1_f2_C0_D10': 'FE1_f0_C0_D10', 'FE0_f1_D01': 'FE0_f0_D01', 'FE0_f0_D01': 'FE0_f0_D01', 'FE1_f0_C0_D01': 'FE1_f0_C0_D01', 'FE1_f1_C1': 'FE1_f1_C1', 'FE1_f1_C0': 'FE1_f1_C0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_f0': array([[ 0.78867513,  0.21132487],
         [ 0.21132487,  0.78867513]]), 'FE0_f0_D01': array([[-1.,  1.],
         [-1.,  1.]])}
  
  QG-utils, psi_tables, name_map:
  {'FE0_f0': ('FE0_f0', (0, [1, 2]), False, False), 'FE1_f1_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE0_f2': ('FE0_f0', (4, [0, 1]), False, False), 'FE1_f0_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f2_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f1_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE0_f1_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE0_f2_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE1_f2_C0': ('FE0_f0', (13, [0, 1]), False, False), 'FE1_f2_C1': ('FE0_f0', (14, [3, 4]), False, False), 'FE1_f2_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE0_f1': ('FE0_f0', (3, [0, 2]), False, False), 'FE0_f0_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE1_f0_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE1_f1_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE1_f0_C0': ('FE0_f0', (5, [1, 2]), False, False), 'FE1_f0_C1': ('FE0_f0', (8, [4, 5]), False, False), 'FE0_f2_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE1_f2_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE1_f0_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE1_f1_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f2_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE0_f1_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE0_f0_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE1_f0_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE1_f1_C1': ('FE0_f0', (12, [3, 5]), False, False), 'FE1_f1_C0': ('FE0_f0', (11, [0, 2]), False, False)}
  Transforming exterior facet integral 0
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 1
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 2
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {2: {VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2): {None: {0: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[ -2.08166817e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  7.88675135e-01,   2.11324865e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  2.11324865e-01,   7.88675135e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -2.08166817e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  7.88675135e-01,   2.11324865e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  2.11324865e-01,   7.88675135e-01]]])}, 1: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[  7.88675135e-01,   2.11324865e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.08166817e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  2.11324865e-01,   7.88675135e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  7.88675135e-01,   2.11324865e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -2.08166817e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  2.11324865e-01,   7.88675135e-01]]])}, 2: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[ 0.78867513,  0.21132487],
          [ 0.        ,  0.        ]],
  
         [[ 0.21132487,  0.78867513],
          [ 0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ],
          [ 0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ],
          [ 0.78867513,  0.21132487]],
  
         [[ 0.        ,  0.        ],
          [ 0.21132487,  0.78867513]],
  
         [[ 0.        ,  0.        ],
          [ 0.        ,  0.        ]]])}}}, FiniteElement('Discontinuous Lagrange', triangle, 1): {None: {0: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[ -2.08166817e-17,   5.55111512e-17],
         [  7.88675135e-01,   2.11324865e-01],
         [  2.11324865e-01,   7.88675135e-01]])}, 1: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[  7.88675135e-01,   2.11324865e-01],
         [ -2.08166817e-17,   5.55111512e-17],
         [  2.11324865e-01,   7.88675135e-01]])}, 2: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[ 0.78867513,  0.21132487],
         [ 0.21132487,  0.78867513],
         [ 0.        ,  0.        ]])}}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_f0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f1': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE0_f2': array([[ 0.78867513,  0.21132487,  0.        ],
         [ 0.21132487,  0.78867513,  0.        ]]), 'FE1_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f1_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE0_f1_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE0_f2_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f2_C0': array([[ 0.78867513,  0.21132487,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.21132487,  0.78867513,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE1_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.78867513,  0.21132487,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.21132487,  0.78867513,
           0.        ]]), 'FE1_f2_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f0_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f1_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f2_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE1_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE1_f1_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f1_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE0_f0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE1_f1_C0': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  tables: {'FE0_f0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f1': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE0_f2': array([[ 0.78867513,  0.21132487,  0.        ],
         [ 0.21132487,  0.78867513,  0.        ]]), 'FE1_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C0': array([[ 0.78867513,  0.21132487,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.21132487,  0.78867513,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE1_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.78867513,  0.21132487,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.21132487,  0.78867513,
           0.        ]]), 'FE0_f0_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f0_C0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE1_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE0_f0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE1_f1_C0': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  name_map: {'FE0_f0_D01': ['FE0_f1_D01', 'FE0_f2_D01'], 'FE1_f0_C1_D01': ['FE1_f1_C1_D01', 'FE1_f2_C1_D01'], 'FE0_f0_D10': ['FE0_f1_D10', 'FE0_f2_D10'], 'FE1_f0_C1_D10': ['FE1_f1_C1_D10', 'FE1_f2_C1_D10'], 'FE1_f0_C0_D01': ['FE1_f1_C0_D01', 'FE1_f2_C0_D01'], 'FE1_f0_C0_D10': ['FE1_f1_C0_D10', 'FE1_f2_C0_D10']}
  
  inv_name_map: {'FE0_f0': 'FE0_f0', 'FE1_f1_C0_D10': 'FE1_f0_C0_D10', 'FE0_f2': 'FE0_f2', 'FE1_f0_C1_D01': 'FE1_f0_C1_D01', 'FE1_f2_C1_D01': 'FE1_f0_C1_D01', 'FE1_f1_C1_D10': 'FE1_f0_C1_D10', 'FE0_f1_D10': 'FE0_f0_D10', 'FE0_f2_D10': 'FE0_f0_D10', 'FE1_f2_C0': 'FE1_f2_C0', 'FE1_f2_C1': 'FE1_f2_C1', 'FE1_f2_C0_D01': 'FE1_f0_C0_D01', 'FE0_f1': 'FE0_f1', 'FE0_f0_D10': 'FE0_f0_D10', 'FE1_f0_C0_D10': 'FE1_f0_C0_D10', 'FE1_f1_C0_D01': 'FE1_f0_C0_D01', 'FE1_f0_C0': 'FE1_f0_C0', 'FE1_f0_C1': 'FE1_f0_C1', 'FE0_f2_D01': 'FE0_f0_D01', 'FE1_f2_C1_D10': 'FE1_f0_C1_D10', 'FE1_f0_C1_D10': 'FE1_f0_C1_D10', 'FE1_f1_C1_D01': 'FE1_f0_C1_D01', 'FE1_f2_C0_D10': 'FE1_f0_C0_D10', 'FE0_f1_D01': 'FE0_f0_D01', 'FE0_f0_D01': 'FE0_f0_D01', 'FE1_f0_C0_D01': 'FE1_f0_C0_D01', 'FE1_f1_C1': 'FE1_f1_C1', 'FE1_f1_C0': 'FE1_f1_C0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_f0': array([[ 0.78867513,  0.21132487],
         [ 0.21132487,  0.78867513]]), 'FE0_f0_D01': array([[-1.,  1.],
         [-1.,  1.]])}
  
  QG-utils, psi_tables, name_map:
  {'FE0_f0': ('FE0_f0', (0, [1, 2]), False, False), 'FE1_f1_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE0_f2': ('FE0_f0', (4, [0, 1]), False, False), 'FE1_f0_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f2_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f1_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE0_f1_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE0_f2_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE1_f2_C0': ('FE0_f0', (13, [0, 1]), False, False), 'FE1_f2_C1': ('FE0_f0', (14, [3, 4]), False, False), 'FE1_f2_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE0_f1': ('FE0_f0', (3, [0, 2]), False, False), 'FE0_f0_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE1_f0_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE1_f1_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE1_f0_C0': ('FE0_f0', (5, [1, 2]), False, False), 'FE1_f0_C1': ('FE0_f0', (8, [4, 5]), False, False), 'FE0_f2_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE1_f2_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE1_f0_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE1_f1_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f2_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE0_f1_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE0_f0_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE1_f0_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE1_f1_C1': ('FE0_f0', (12, [3, 5]), False, False), 'FE1_f1_C0': ('FE0_f0', (11, [0, 2]), False, False)}
  Transforming interior facet integral (0, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (0, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (0, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (1, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 0)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 1)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming interior facet integral (2, 2)
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.000754 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Reusing element from cache
  Reusing element from cache
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {2: {VectorElement(FiniteElement('Lagrange', triangle, 1), dim=2): {None: {0: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[ -2.08166817e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  7.88675135e-01,   2.11324865e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  2.11324865e-01,   7.88675135e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -2.08166817e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  7.88675135e-01,   2.11324865e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  2.11324865e-01,   7.88675135e-01]]])}, 1: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[  7.88675135e-01,   2.11324865e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[ -2.08166817e-17,   5.55111512e-17],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  2.11324865e-01,   7.88675135e-01],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  7.88675135e-01,   2.11324865e-01]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -2.08166817e-17,   5.55111512e-17]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  2.11324865e-01,   7.88675135e-01]]])}, 2: {(0, 1): array([[[ -1.00000000e+00,  -1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  8.88178420e-16,   8.88178420e-16],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  1.00000000e+00,   1.00000000e+00],
          [  0.00000000e+00,   0.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [ -1.00000000e+00,  -1.00000000e+00]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  8.88178420e-16,   8.88178420e-16]],
  
         [[  0.00000000e+00,   0.00000000e+00],
          [  1.00000000e+00,   1.00000000e+00]]]), (1, 0): array([[[-1., -1.],
          [ 0.,  0.]],
  
         [[ 1.,  1.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]],
  
         [[ 0.,  0.],
          [-1., -1.]],
  
         [[ 0.,  0.],
          [ 1.,  1.]],
  
         [[ 0.,  0.],
          [ 0.,  0.]]]), (0, 0): array([[[ 0.78867513,  0.21132487],
          [ 0.        ,  0.        ]],
  
         [[ 0.21132487,  0.78867513],
          [ 0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ],
          [ 0.        ,  0.        ]],
  
         [[ 0.        ,  0.        ],
          [ 0.78867513,  0.21132487]],
  
         [[ 0.        ,  0.        ],
          [ 0.21132487,  0.78867513]],
  
         [[ 0.        ,  0.        ],
          [ 0.        ,  0.        ]]])}}}, FiniteElement('Discontinuous Lagrange', triangle, 1): {None: {0: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[ -2.08166817e-17,   5.55111512e-17],
         [  7.88675135e-01,   2.11324865e-01],
         [  2.11324865e-01,   7.88675135e-01]])}, 1: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[  7.88675135e-01,   2.11324865e-01],
         [ -2.08166817e-17,   5.55111512e-17],
         [  2.11324865e-01,   7.88675135e-01]])}, 2: {(0, 1): array([[ -1.00000000e+00,  -1.00000000e+00],
         [  8.88178420e-16,   8.88178420e-16],
         [  1.00000000e+00,   1.00000000e+00]]), (1, 0): array([[-1., -1.],
         [ 1.,  1.],
         [ 0.,  0.]]), (0, 0): array([[ 0.78867513,  0.21132487],
         [ 0.21132487,  0.78867513],
         [ 0.        ,  0.        ]])}}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_f0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f1': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE0_f2': array([[ 0.78867513,  0.21132487,  0.        ],
         [ 0.21132487,  0.78867513,  0.        ]]), 'FE1_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f1_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE0_f1_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE0_f2_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f2_C0': array([[ 0.78867513,  0.21132487,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.21132487,  0.78867513,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE1_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.78867513,  0.21132487,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.21132487,  0.78867513,
           0.        ]]), 'FE1_f2_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f0_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f1_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f2_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE1_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE1_f1_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE0_f1_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE0_f0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE1_f1_C0': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  tables: {'FE0_f0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE0_f1': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE0_f2': array([[ 0.78867513,  0.21132487,  0.        ],
         [ 0.21132487,  0.78867513,  0.        ]]), 'FE1_f0_C1_D01': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f2_C0': array([[ 0.78867513,  0.21132487,  0.        ,  0.        ,  0.        ,
           0.        ],
         [ 0.21132487,  0.78867513,  0.        ,  0.        ,  0.        ,
           0.        ]]), 'FE1_f2_C1': array([[ 0.        ,  0.        ,  0.        ,  0.78867513,  0.21132487,
           0.        ],
         [ 0.        ,  0.        ,  0.        ,  0.21132487,  0.78867513,
           0.        ]]), 'FE0_f0_D10': array([[-1.,  1.,  0.],
         [-1.,  1.,  0.]]), 'FE1_f0_C0_D10': array([[-1.,  1.,  0.,  0.,  0.,  0.],
         [-1.,  1.,  0.,  0.,  0.,  0.]]), 'FE1_f0_C0': array([[ -2.08166817e-17,   7.88675135e-01,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  5.55111512e-17,   2.11324865e-01,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f0_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
           -2.08166817e-17,   7.88675135e-01,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            5.55111512e-17,   2.11324865e-01,   7.88675135e-01]]), 'FE1_f0_C1_D10': array([[ 0.,  0.,  0., -1.,  1.,  0.],
         [ 0.,  0.,  0., -1.,  1.,  0.]]), 'FE0_f0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00]]), 'FE1_f0_C0_D01': array([[ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [ -1.00000000e+00,   8.88178420e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_f1_C1': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            7.88675135e-01,  -2.08166817e-17,   2.11324865e-01],
         [  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            2.11324865e-01,   5.55111512e-17,   7.88675135e-01]]), 'FE1_f1_C0': array([[  7.88675135e-01,  -2.08166817e-17,   2.11324865e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
         [  2.11324865e-01,   5.55111512e-17,   7.88675135e-01,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]])}
  
  name_map: {'FE0_f0_D01': ['FE0_f1_D01', 'FE0_f2_D01'], 'FE1_f0_C1_D01': ['FE1_f1_C1_D01', 'FE1_f2_C1_D01'], 'FE0_f0_D10': ['FE0_f1_D10', 'FE0_f2_D10'], 'FE1_f0_C1_D10': ['FE1_f1_C1_D10', 'FE1_f2_C1_D10'], 'FE1_f0_C0_D01': ['FE1_f1_C0_D01', 'FE1_f2_C0_D01'], 'FE1_f0_C0_D10': ['FE1_f1_C0_D10', 'FE1_f2_C0_D10']}
  
  inv_name_map: {'FE0_f0': 'FE0_f0', 'FE1_f1_C0_D10': 'FE1_f0_C0_D10', 'FE0_f2': 'FE0_f2', 'FE1_f0_C1_D01': 'FE1_f0_C1_D01', 'FE1_f2_C1_D01': 'FE1_f0_C1_D01', 'FE1_f1_C1_D10': 'FE1_f0_C1_D10', 'FE0_f1_D10': 'FE0_f0_D10', 'FE0_f2_D10': 'FE0_f0_D10', 'FE1_f2_C0': 'FE1_f2_C0', 'FE1_f2_C1': 'FE1_f2_C1', 'FE1_f2_C0_D01': 'FE1_f0_C0_D01', 'FE0_f1': 'FE0_f1', 'FE0_f0_D10': 'FE0_f0_D10', 'FE1_f0_C0_D10': 'FE1_f0_C0_D10', 'FE1_f1_C0_D01': 'FE1_f0_C0_D01', 'FE1_f0_C0': 'FE1_f0_C0', 'FE1_f0_C1': 'FE1_f0_C1', 'FE0_f2_D01': 'FE0_f0_D01', 'FE1_f2_C1_D10': 'FE1_f0_C1_D10', 'FE1_f0_C1_D10': 'FE1_f0_C1_D10', 'FE1_f1_C1_D01': 'FE1_f0_C1_D01', 'FE1_f2_C0_D10': 'FE1_f0_C0_D10', 'FE0_f1_D01': 'FE0_f0_D01', 'FE0_f0_D01': 'FE0_f0_D01', 'FE1_f0_C0_D01': 'FE1_f0_C0_D01', 'FE1_f1_C1': 'FE1_f1_C1', 'FE1_f1_C0': 'FE1_f1_C0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_f0': array([[ 0.78867513,  0.21132487],
         [ 0.21132487,  0.78867513]]), 'FE0_f0_D01': array([[-1.,  1.],
         [-1.,  1.]])}
  
  QG-utils, psi_tables, name_map:
  {'FE0_f0': ('FE0_f0', (0, [1, 2]), False, False), 'FE1_f1_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE0_f2': ('FE0_f0', (4, [0, 1]), False, False), 'FE1_f0_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f2_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f1_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE0_f1_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE0_f2_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE1_f2_C0': ('FE0_f0', (13, [0, 1]), False, False), 'FE1_f2_C1': ('FE0_f0', (14, [3, 4]), False, False), 'FE1_f2_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE0_f1': ('FE0_f0', (3, [0, 2]), False, False), 'FE0_f0_D10': ('FE0_f0_D01', (2, [0, 1]), False, False), 'FE1_f0_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE1_f1_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE1_f0_C0': ('FE0_f0', (5, [1, 2]), False, False), 'FE1_f0_C1': ('FE0_f0', (8, [4, 5]), False, False), 'FE0_f2_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE1_f2_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE1_f0_C1_D10': ('FE0_f0_D01', (10, [3, 4]), False, False), 'FE1_f1_C1_D01': ('FE0_f0_D01', (9, [3, 5]), False, False), 'FE1_f2_C0_D10': ('FE0_f0_D01', (7, [0, 1]), False, False), 'FE0_f1_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE0_f0_D01': ('FE0_f0_D01', (1, [0, 2]), False, False), 'FE1_f0_C0_D01': ('FE0_f0_D01', (6, [0, 2]), False, False), 'FE1_f1_C1': ('FE0_f0', (12, [3, 5]), False, False), 'FE1_f1_C0': ('FE0_f0', (11, [0, 2]), False, False)}
  Transforming exterior facet integral 0
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 1
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Transforming exterior facet integral 2
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.00116 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.000931 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Precomputing integrals on reference element
  Reusing element from cache
  9 entries computed in 0.000969 seconds
  Shape of reference tensor: (3, 3)
  Primary multi index:   rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 1 dims = [3] indices = [[0], [1], [2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.339809 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimising expressions for facet integral 0
  Optimising expressions for facet integral 1
  Optimising expressions for facet integral 2
  Optimising expressions for facet integral (0, 0)
  Optimising expressions for facet integral (0, 1)
  Optimising expressions for facet integral (0, 2)
  Optimising expressions for facet integral (1, 0)
  Optimising expressions for facet integral (1, 1)
  Optimising expressions for facet integral (1, 2)
  Optimising expressions for facet integral (2, 0)
  Optimising expressions for facet integral (2, 1)
  Optimising expressions for facet integral (2, 2)
  Optimising expressions for facet integral 0
  Optimising expressions for facet integral 1
  Optimising expressions for facet integral 2
  
Compiler stage 3 finished in 0.0595629 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 3 element(s)
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Generating code for 3 dofmap(s)
  Generating code for 1 coordinate_mapping(s)
  Generating code for integrals
  Removing unused variable: facet_area
  Removing unused variable: facet_area
  Removing unused variable: n_11
  Removing unused variable: n_10
  Removing unused variable: facet_area
  Generating code for forms
  
Compiler stage 4 finished in 0.174591 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.000699997 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000664949 seconds.

FFC finished in 0.687029 seconds.
Output written to ./Poisson.h.
