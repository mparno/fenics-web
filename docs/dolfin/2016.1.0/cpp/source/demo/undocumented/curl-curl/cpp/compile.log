This is FFC, the FEniCS Form Compiler, version 2016.1.0.
UFC backend version 2016.1.0, signature 1b14b3cad537cb974523d529928ad9bde02ef657.
For further information, visit https://bitbucket.org/fenics-project/ffc/.

Compiling form CurrentDensity

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       3
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    0
  Coefficients:              '[]'
  Unique elements:           'Vector<3 x CG1(?)>'
  Unique sub elements:       'Vector<3 x CG1(?)>, CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 0
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
  Geometric dimension:       3
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    1
  Coefficients:              '[w_0]'
  Unique elements:           'Vector<3 x CG1(?)>, N1curl1(?)'
  Unique sub elements:       'Vector<3 x CG1(?)>, N1curl1(?), CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 3
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 1
  quadrature_degree: 1
  
Compiler stage 1 finished in 0.151629 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 3 elements
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 3 dofmaps
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 1 coordinate mappings
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  144 entries computed in 0.0013 seconds
  Shape of reference tensor: (12, 12)
  Primary multi index:   rank = 2 dims = [12, 12] indices = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [0, 9], [0, 10], [0, 11], [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [1, 9], [1, 10], [1, 11], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [2, 9], [2, 10], [2, 11], [3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [3, 9], [3, 10], [3, 11], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [4, 9], [4, 10], [4, 11], [5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [5, 9], [5, 10], [5, 11], [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [7, 0], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7], [7, 8], [7, 9], [7, 10], [7, 11], [8, 0], [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8], [8, 9], [8, 10], [8, 11], [9, 0], [9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 7], [9, 8], [9, 9], [9, 10], [9, 11], [10, 0], [10, 1], [10, 2], [10, 3], [10, 4], [10, 5], [10, 6], [10, 7], [10, 8], [10, 9], [10, 10], [10, 11], [11, 0], [11, 1], [11, 2], [11, 3], [11, 4], [11, 5], [11, 6], [11, 7], [11, 8], [11, 9], [11, 10], [11, 11]]
  Secondary multi index: rank = 0 dims = [] indices = [[]]
  Internal multi index:  rank = 1 dims = [3] indices = [[0], [1], [2]]
  Secondary multi index: rank = 0 dims = [] indices = [[]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Reusing element from cache
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  648 entries computed in 0.00146 seconds
  Shape of reference tensor: (12, 6, 3, 3)
  Primary multi index:   rank = 1 dims = [12] indices = [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  648 entries computed in 0.00144 seconds
  Shape of reference tensor: (12, 6, 3, 3)
  Primary multi index:   rank = 1 dims = [12] indices = [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  648 entries computed in 0.00143 seconds
  Shape of reference tensor: (12, 6, 3, 3)
  Primary multi index:   rank = 1 dims = [12] indices = [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  648 entries computed in 0.00144 seconds
  Shape of reference tensor: (12, 6, 3, 3)
  Primary multi index:   rank = 1 dims = [12] indices = [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  648 entries computed in 0.00142 seconds
  Shape of reference tensor: (12, 6, 3, 3)
  Primary multi index:   rank = 1 dims = [12] indices = [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  648 entries computed in 0.00143 seconds
  Shape of reference tensor: (12, 6, 3, 3)
  Primary multi index:   rank = 1 dims = [12] indices = [[0], [1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [6, 3, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [3, 0, 0], [3, 0, 1], [3, 0, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [4, 0, 0], [4, 0, 1], [4, 0, 2], [4, 1, 0], [4, 1, 1], [4, 1, 2], [4, 2, 0], [4, 2, 1], [4, 2, 2], [5, 0, 0], [5, 0, 1], [5, 0, 2], [5, 1, 0], [5, 1, 1], [5, 1, 2], [5, 2, 0], [5, 2, 1], [5, 2, 2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.028836 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  
Compiler stage 3 finished in 0.000182152 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 3 element(s)
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Generating code for 3 dofmap(s)
  Generating code for 1 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.387877 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00071311 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000742912 seconds.

FFC finished in 0.570383 seconds.
Output written to ./CurrentDensity.h.
This is FFC, the FEniCS Form Compiler, version 2016.1.0.
UFC backend version 2016.1.0, signature 1b14b3cad537cb974523d529928ad9bde02ef657.
For further information, visit https://bitbucket.org/fenics-project/ffc/.

Compiling form EddyCurrents

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Geometric dimension:       3
  Number of cell subdomains: 0
  Rank:                      2
  Arguments:                 '(v_0, v_1)'
  Number of coefficients:    0
  Coefficients:              '[]'
  Unique elements:           'N1curl1(?), Vector<3 x CG1(?)>'
  Unique sub elements:       'N1curl1(?), Vector<3 x CG1(?)>, CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 4
  representation:    auto --> quadrature
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 0
  quadrature_degree: 0
  
  Geometric dimension:       3
  Number of cell subdomains: 0
  Rank:                      1
  Arguments:                 '(v_0)'
  Number of coefficients:    1
  Coefficients:              '[w_0]'
  Unique elements:           'N1curl1(?), Vector<3 x CG1(?)>'
  Unique sub elements:       'N1curl1(?), Vector<3 x CG1(?)>, CG1(?)'
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Estimated cost of tensor representation: 2
  representation:    auto --> tensor
  quadrature_rule:   auto --> default
  quadrature_degree: auto --> 2
  quadrature_degree: 2
  
Compiler stage 1 finished in 0.270008 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 3 elements
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 3 dofmaps
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing representation of 1 coordinate mappings
  Reusing element from cache
  Computing representation of integrals
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {1: {FiniteElement('Nedelec 1st kind H(curl)', tetrahedron, 1): {None: {None: {(1, 0, 0): array([[[  1.60341042e-31],
          [ -3.04047097e-16],
          [  1.14017661e-16]],
  
         [[ -3.79213356e-16],
          [ -1.90029436e-17],
          [  1.00000000e+00]],
  
         [[ -5.82117938e-16],
          [  1.00000000e+00],
          [ -1.71026492e-16]],
  
         [[  3.79213356e-16],
          [  1.52023549e-16],
          [ -1.00000000e+00]],
  
         [[  5.82117938e-16],
          [ -1.00000000e+00],
          [  5.32082420e-16]],
  
         [[ -9.61331293e-16],
          [  1.00000000e+00],
          [  1.00000000e+00]]]), (0, 1, 0): array([[[ -6.58281275e-17],
          [ -1.84937612e-16],
          [  1.00000000e+00]],
  
         [[ -1.56692614e-16],
          [  3.98696239e-17],
          [  3.33066907e-16]],
  
         [[ -1.00000000e+00],
          [  4.44089210e-16],
          [  2.10713328e-16]],
  
         [[  3.87091060e-16],
          [  1.74753966e-16],
          [ -1.00000000e+00]],
  
         [[  1.00000000e+00],
          [ -6.10622664e-16],
          [  1.00000000e+00]],
  
         [[ -1.00000000e+00],
          [  4.99600361e-16],
          [  3.88578059e-16]]]), (0, 0, 0): array([[[  1.82237253e-17],
          [ -2.50000000e-01],
          [  2.50000000e-01]],
  
         [[ -2.50000000e-01],
          [  7.25571004e-17],
          [  2.50000000e-01]],
  
         [[ -2.50000000e-01],
          [  2.50000000e-01],
          [  4.85670141e-17]],
  
         [[  2.50000000e-01],
          [  2.50000000e-01],
          [  5.00000000e-01]],
  
         [[  2.50000000e-01],
          [  5.00000000e-01],
          [  2.50000000e-01]],
  
         [[  5.00000000e-01],
          [  2.50000000e-01],
          [  2.50000000e-01]]]), (0, 0, 1): array([[[  4.12500768e-16],
          [ -1.00000000e+00],
          [  4.44089210e-16]],
  
         [[ -1.00000000e+00],
          [  4.10367360e-16],
          [  4.44089210e-16]],
  
         [[ -2.77555756e-16],
          [  1.66533454e-16],
          [  1.32289452e-17]],
  
         [[  1.00000000e+00],
          [  1.00000000e+00],
          [ -7.77156117e-16]],
  
         [[  4.44089210e-16],
          [ -1.00000000e+00],
          [  3.33066907e-16]],
  
         [[ -1.00000000e+00],
          [  4.99600361e-16],
          [  4.99600361e-16]]])}}}, VectorElement(FiniteElement('Lagrange', tetrahedron, 1), dim=3): {None: {None: {(1, 0, 0): array([[[-1.],
          [ 0.],
          [ 0.]],
  
         [[ 1.],
          [ 0.],
          [ 0.]],
  
         [[ 0.],
          [ 0.],
          [ 0.]],
  
         [[ 0.],
          [ 0.],
          [ 0.]],
  
         [[ 0.],
          [-1.],
          [ 0.]],
  
         [[ 0.],
          [ 1.],
          [ 0.]],
  
         [[ 0.],
          [ 0.],
          [ 0.]],
  
         [[ 0.],
          [ 0.],
          [ 0.]],
  
         [[ 0.],
          [ 0.],
          [-1.]],
  
         [[ 0.],
          [ 0.],
          [ 1.]],
  
         [[ 0.],
          [ 0.],
          [ 0.]],
  
         [[ 0.],
          [ 0.],
          [ 0.]]]), (0, 1, 0): array([[[ -1.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[ -1.11022302e-16],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  1.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [ -1.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [ -1.11022302e-16],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  1.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [ -1.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [ -1.11022302e-16]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [  1.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]]]), (0, 0, 0): array([[[ 0.25],
          [ 0.  ],
          [ 0.  ]],
  
         [[ 0.25],
          [ 0.  ],
          [ 0.  ]],
  
         [[ 0.25],
          [ 0.  ],
          [ 0.  ]],
  
         [[ 0.25],
          [ 0.  ],
          [ 0.  ]],
  
         [[ 0.  ],
          [ 0.25],
          [ 0.  ]],
  
         [[ 0.  ],
          [ 0.25],
          [ 0.  ]],
  
         [[ 0.  ],
          [ 0.25],
          [ 0.  ]],
  
         [[ 0.  ],
          [ 0.25],
          [ 0.  ]],
  
         [[ 0.  ],
          [ 0.  ],
          [ 0.25]],
  
         [[ 0.  ],
          [ 0.  ],
          [ 0.25]],
  
         [[ 0.  ],
          [ 0.  ],
          [ 0.25]],
  
         [[ 0.  ],
          [ 0.  ],
          [ 0.25]]]), (0, 0, 1): array([[[ -1.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[ -5.55111512e-17],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  1.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [ -1.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [ -5.55111512e-17],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  1.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [ -1.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [ -5.55111512e-17]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [  0.00000000e+00]],
  
         [[  0.00000000e+00],
          [  0.00000000e+00],
          [  1.00000000e+00]]])}}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0_C2_D001': array([[  4.44089210e-16,   4.44089210e-16,   1.32289452e-17,
           -7.77156117e-16,   3.33066907e-16,   4.99600361e-16]]), 'FE0_C1_D010': array([[ -1.84937612e-16,   3.98696239e-17,   4.44089210e-16,
            1.74753966e-16,  -6.10622664e-16,   4.99600361e-16]]), 'FE1_C0_D010': array([[ -1.00000000e+00,  -1.11022302e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_C2_D010': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,  -1.00000000e+00,
           -1.11022302e-16,   1.00000000e+00,   0.00000000e+00]]), 'FE0_C0_D010': array([[ -6.58281275e-17,  -1.56692614e-16,  -1.00000000e+00,
            3.87091060e-16,   1.00000000e+00,  -1.00000000e+00]]), 'FE1_C1_D010': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,  -1.00000000e+00,  -1.11022302e-16,
            1.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE0_C2': array([[  2.50000000e-01,   2.50000000e-01,   4.85670141e-17,
            5.00000000e-01,   2.50000000e-01,   2.50000000e-01]]), 'FE0_C1': array([[ -2.50000000e-01,   7.25571004e-17,   2.50000000e-01,
            2.50000000e-01,   5.00000000e-01,   2.50000000e-01]]), 'FE0_C0': array([[  1.82237253e-17,  -2.50000000e-01,  -2.50000000e-01,
            2.50000000e-01,   2.50000000e-01,   5.00000000e-01]]), 'FE0_C2_D010': array([[  1.00000000e+00,   3.33066907e-16,   2.10713328e-16,
           -1.00000000e+00,   1.00000000e+00,   3.88578059e-16]]), 'FE0_C2_D100': array([[  1.14017661e-16,   1.00000000e+00,  -1.71026492e-16,
           -1.00000000e+00,   5.32082420e-16,   1.00000000e+00]]), 'FE0_C1_D001': array([[ -1.00000000e+00,   4.10367360e-16,   1.66533454e-16,
            1.00000000e+00,  -1.00000000e+00,   4.99600361e-16]]), 'FE1_C0_D001': array([[ -1.00000000e+00,  -5.55111512e-17,   0.00000000e+00,
            1.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_C0': array([[ 0.25,  0.25,  0.25,  0.25,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,
           0.  ,  0.  ,  0.  ]]), 'FE0_C1_D100': array([[ -3.04047097e-16,  -1.90029436e-17,   1.00000000e+00,
            1.52023549e-16,  -1.00000000e+00,   1.00000000e+00]]), 'FE0_C0_D100': array([[  1.60341042e-31,  -3.79213356e-16,  -5.82117938e-16,
            3.79213356e-16,   5.82117938e-16,  -9.61331293e-16]]), 'FE1_C0_D100': array([[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]), 'FE1_C2_D001': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,  -1.00000000e+00,
           -5.55111512e-17,   0.00000000e+00,   1.00000000e+00]]), 'FE0_C0_D001': array([[  4.12500768e-16,  -1.00000000e+00,  -2.77555756e-16,
            1.00000000e+00,   4.44089210e-16,  -1.00000000e+00]]), 'FE1_C1_D100': array([[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]), 'FE1_C2_D100': array([[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]), 'FE1_C1': array([[ 0.  ,  0.  ,  0.  ,  0.  ,  0.25,  0.25,  0.25,  0.25,  0.  ,
           0.  ,  0.  ,  0.  ]]), 'FE1_C1_D001': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,  -1.00000000e+00,  -5.55111512e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_C2': array([[ 0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.25,
           0.25,  0.25,  0.25]])}
  
  tables: {'FE1_C0_D010': array([[ -1.00000000e+00,  -1.11022302e-16,   1.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_C2_D010': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,  -1.00000000e+00,
           -1.11022302e-16,   1.00000000e+00,   0.00000000e+00]]), 'FE0_C0_D010': array([[ -6.58281275e-17,  -1.56692614e-16,  -1.00000000e+00,
            3.87091060e-16,   1.00000000e+00,  -1.00000000e+00]]), 'FE1_C1_D010': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,  -1.00000000e+00,  -1.11022302e-16,
            1.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE0_C2': array([[  2.50000000e-01,   2.50000000e-01,   4.85670141e-17,
            5.00000000e-01,   2.50000000e-01,   2.50000000e-01]]), 'FE0_C1': array([[ -2.50000000e-01,   7.25571004e-17,   2.50000000e-01,
            2.50000000e-01,   5.00000000e-01,   2.50000000e-01]]), 'FE0_C0': array([[  1.82237253e-17,  -2.50000000e-01,  -2.50000000e-01,
            2.50000000e-01,   2.50000000e-01,   5.00000000e-01]]), 'FE0_C2_D010': array([[  1.00000000e+00,   3.33066907e-16,   2.10713328e-16,
           -1.00000000e+00,   1.00000000e+00,   3.88578059e-16]]), 'FE0_C2_D100': array([[  1.14017661e-16,   1.00000000e+00,  -1.71026492e-16,
           -1.00000000e+00,   5.32082420e-16,   1.00000000e+00]]), 'FE0_C1_D001': array([[ -1.00000000e+00,   4.10367360e-16,   1.66533454e-16,
            1.00000000e+00,  -1.00000000e+00,   4.99600361e-16]]), 'FE1_C0_D001': array([[ -1.00000000e+00,  -5.55111512e-17,   0.00000000e+00,
            1.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_C0': array([[ 0.25,  0.25,  0.25,  0.25,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,
           0.  ,  0.  ,  0.  ]]), 'FE0_C1_D100': array([[ -3.04047097e-16,  -1.90029436e-17,   1.00000000e+00,
            1.52023549e-16,  -1.00000000e+00,   1.00000000e+00]]), 'FE0_C0_D100': array([[  1.60341042e-31,  -3.79213356e-16,  -5.82117938e-16,
            3.79213356e-16,   5.82117938e-16,  -9.61331293e-16]]), 'FE1_C0_D100': array([[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]), 'FE1_C2_D001': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,  -1.00000000e+00,
           -5.55111512e-17,   0.00000000e+00,   1.00000000e+00]]), 'FE0_C0_D001': array([[  4.12500768e-16,  -1.00000000e+00,  -2.77555756e-16,
            1.00000000e+00,   4.44089210e-16,  -1.00000000e+00]]), 'FE1_C1_D100': array([[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]), 'FE1_C2_D100': array([[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.]]), 'FE1_C1': array([[ 0.  ,  0.  ,  0.  ,  0.  ,  0.25,  0.25,  0.25,  0.25,  0.  ,
           0.  ,  0.  ,  0.  ]]), 'FE1_C1_D001': array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00,
            0.00000000e+00,  -1.00000000e+00,  -5.55111512e-17,
            0.00000000e+00,   1.00000000e+00,   0.00000000e+00,
            0.00000000e+00,   0.00000000e+00,   0.00000000e+00]]), 'FE1_C2': array([[ 0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.25,
           0.25,  0.25,  0.25]])}
  
  name_map: {'FE0_C0_D100': ['FE0_C1_D010', 'FE0_C2_D001']}
  
  inv_name_map: {'FE0_C2_D001': 'FE0_C0_D100', 'FE0_C1_D010': 'FE0_C0_D100', 'FE1_C0_D010': 'FE1_C0_D010', 'FE1_C2_D010': 'FE1_C2_D010', 'FE0_C0_D010': 'FE0_C0_D010', 'FE1_C1_D010': 'FE1_C1_D010', 'FE0_C2': 'FE0_C2', 'FE0_C1': 'FE0_C1', 'FE0_C0': 'FE0_C0', 'FE0_C2_D010': 'FE0_C2_D010', 'FE0_C2_D100': 'FE0_C2_D100', 'FE0_C1_D001': 'FE0_C1_D001', 'FE1_C0_D001': 'FE1_C0_D001', 'FE1_C0': 'FE1_C0', 'FE0_C1_D100': 'FE0_C1_D100', 'FE0_C0_D100': 'FE0_C0_D100', 'FE1_C0_D100': 'FE1_C0_D100', 'FE1_C2_D001': 'FE1_C2_D001', 'FE0_C0_D001': 'FE0_C0_D001', 'FE1_C1_D100': 'FE1_C1_D100', 'FE1_C2_D100': 'FE1_C2_D100', 'FE1_C1': 'FE1_C1', 'FE1_C1_D001': 'FE1_C1_D001', 'FE1_C2': 'FE1_C2'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0_C2': array([[ 0.25,  0.25,  0.5 ,  0.25,  0.25]]), 'FE0_C1': array([[-0.25,  0.25,  0.25,  0.5 ,  0.25]]), 'FE0_C0': array([[-0.25, -0.25,  0.25,  0.25,  0.5 ]]), 'FE1_C0_D001': array([[-1.,  1.]]), 'FE1_C0': array([[ 0.25,  0.25,  0.25,  0.25]]), 'FE0_C1_D100': array([[ 1., -1.,  1.]]), 'FE0_C0_D100': array([[ 0.,  0.,  0.,  0.,  0.,  0.]]), 'FE0_C0_D001': array([[-1.,  1., -1.]])}
  
  QG-utils, psi_tables, name_map:
  {'FE0_C2_D001': ('FE0_C0_D100', (), True, False), 'FE0_C1_D010': ('FE0_C0_D100', (), True, False), 'FE1_C0_D010': ('FE1_C0_D001', (11, [0, 2]), False, False), 'FE1_C2_D010': ('FE1_C0_D001', (19, [8, 10]), False, False), 'FE0_C0_D010': ('FE0_C0_D001', (2, [2, 4, 5]), False, False), 'FE1_C1_D010': ('FE1_C0_D001', (15, [4, 6]), False, False), 'FE0_C2': ('FE0_C2', (6, [0, 1, 3, 4, 5]), False, False), 'FE0_C1': ('FE0_C1', (3, [0, 2, 3, 4, 5]), False, False), 'FE0_C0': ('FE0_C0', (0, [1, 2, 3, 4, 5]), False, False), 'FE0_C2_D010': ('FE0_C1_D100', (7, [0, 3, 4]), False, False), 'FE0_C2_D100': ('FE0_C1_D100', (8, [1, 3, 5]), False, False), 'FE0_C1_D001': ('FE0_C0_D001', (4, [0, 3, 4]), False, False), 'FE1_C0_D001': ('FE1_C0_D001', (10, [0, 3]), False, False), 'FE1_C0': ('FE1_C0', (9, [0, 1, 2, 3]), False, False), 'FE0_C1_D100': ('FE0_C1_D100', (5, [2, 4, 5]), False, False), 'FE0_C0_D100': ('FE0_C0_D100', (), True, False), 'FE1_C0_D100': ('FE1_C0_D001', (12, [0, 1]), False, False), 'FE1_C2_D001': ('FE1_C0_D001', (18, [8, 11]), False, False), 'FE0_C0_D001': ('FE0_C0_D001', (1, [1, 3, 5]), False, False), 'FE1_C1_D100': ('FE1_C0_D001', (16, [4, 5]), False, False), 'FE1_C2_D100': ('FE1_C0_D001', (20, [8, 9]), False, False), 'FE1_C1': ('FE1_C0', (13, [4, 5, 6, 7]), False, False), 'FE1_C1_D001': ('FE1_C0_D001', (14, [4, 7]), False, False), 'FE1_C2': ('FE1_C0', (17, [8, 9, 10, 11]), False, False)}
  Transforming cell integral
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  Reusing element from cache
  648 entries computed in 0.0016 seconds
  Shape of reference tensor: (6, 3, 12, 3)
  Primary multi index:   rank = 1 dims = [6] indices = [[0], [1], [2], [3], [4], [5]]
  Secondary multi index: rank = 3 dims = [3, 12, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 4, 0], [0, 4, 1], [0, 4, 2], [0, 5, 0], [0, 5, 1], [0, 5, 2], [0, 6, 0], [0, 6, 1], [0, 6, 2], [0, 7, 0], [0, 7, 1], [0, 7, 2], [0, 8, 0], [0, 8, 1], [0, 8, 2], [0, 9, 0], [0, 9, 1], [0, 9, 2], [0, 10, 0], [0, 10, 1], [0, 10, 2], [0, 11, 0], [0, 11, 1], [0, 11, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 4, 0], [1, 4, 1], [1, 4, 2], [1, 5, 0], [1, 5, 1], [1, 5, 2], [1, 6, 0], [1, 6, 1], [1, 6, 2], [1, 7, 0], [1, 7, 1], [1, 7, 2], [1, 8, 0], [1, 8, 1], [1, 8, 2], [1, 9, 0], [1, 9, 1], [1, 9, 2], [1, 10, 0], [1, 10, 1], [1, 10, 2], [1, 11, 0], [1, 11, 1], [1, 11, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 4, 0], [2, 4, 1], [2, 4, 2], [2, 5, 0], [2, 5, 1], [2, 5, 2], [2, 6, 0], [2, 6, 1], [2, 6, 2], [2, 7, 0], [2, 7, 1], [2, 7, 2], [2, 8, 0], [2, 8, 1], [2, 8, 2], [2, 9, 0], [2, 9, 1], [2, 9, 2], [2, 10, 0], [2, 10, 1], [2, 10, 2], [2, 11, 0], [2, 11, 1], [2, 11, 2]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 3 dims = [3, 12, 3] indices = [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [0, 3, 0], [0, 3, 1], [0, 3, 2], [0, 4, 0], [0, 4, 1], [0, 4, 2], [0, 5, 0], [0, 5, 1], [0, 5, 2], [0, 6, 0], [0, 6, 1], [0, 6, 2], [0, 7, 0], [0, 7, 1], [0, 7, 2], [0, 8, 0], [0, 8, 1], [0, 8, 2], [0, 9, 0], [0, 9, 1], [0, 9, 2], [0, 10, 0], [0, 10, 1], [0, 10, 2], [0, 11, 0], [0, 11, 1], [0, 11, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 4, 0], [1, 4, 1], [1, 4, 2], [1, 5, 0], [1, 5, 1], [1, 5, 2], [1, 6, 0], [1, 6, 1], [1, 6, 2], [1, 7, 0], [1, 7, 1], [1, 7, 2], [1, 8, 0], [1, 8, 1], [1, 8, 2], [1, 9, 0], [1, 9, 1], [1, 9, 2], [1, 10, 0], [1, 10, 1], [1, 10, 2], [1, 11, 0], [1, 11, 1], [1, 11, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 4, 0], [2, 4, 1], [2, 4, 2], [2, 5, 0], [2, 5, 1], [2, 5, 2], [2, 6, 0], [2, 6, 1], [2, 6, 2], [2, 7, 0], [2, 7, 1], [2, 7, 2], [2, 8, 0], [2, 8, 1], [2, 8, 2], [2, 9, 0], [2, 9, 1], [2, 9, 2], [2, 10, 0], [2, 10, 1], [2, 10, 2], [2, 11, 0], [2, 11, 1], [2, 11, 2]]
  External multi index:  rank = 0 dims = [] indices = [[]]
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.14319 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  Optimising expressions for cell integral
  
Compiler stage 3 finished in 0.112505 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 3 element(s)
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Generating code for 3 dofmap(s)
  Generating code for 1 coordinate_mapping(s)
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: area
  Removing unused variable: s
  Removing unused variable: lc
  Removing unused variable: lb
  Removing unused variable: la
  Removing unused variable: v2v3
  Removing unused variable: v1v3
  Removing unused variable: v0v3
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Generating code for forms
  
Compiler stage 4 finished in 0.527659 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.00155997 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.0012219 seconds.

FFC finished in 1.05681 seconds.
Output written to ./EddyCurrents.h.
This is FFC, the FEniCS Form Compiler, version 2016.1.0.
UFC backend version 2016.1.0, signature 1b14b3cad537cb974523d529928ad9bde02ef657.
For further information, visit https://bitbucket.org/fenics-project/ffc/.

Compiling element P1Space

Compiler stage 1: Analyzing elements(s)
---------------------------------------
  
Compiler stage 1 finished in 0.000283003 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Reusing element from cache
  Reusing element from cache
  Computing representation of 1 dofmaps
  Reusing element from cache
  Computing representation of 0 coordinate mappings
  Computing representation of integrals
  Computing representation of forms
  
Compiler stage 2 finished in 0.0772159 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  
Compiler stage 3 finished in 0.000174999 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 element(s)
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Removing unused variable: tmp4
  Removing unused variable: tmp3
  Removing unused variable: tmp2
  Removing unused variable: tmp1
  Generating code for 1 dofmap(s)
  Generating code for 0 coordinate_mapping(s)
  Generating code for integrals
  Generating code for forms
  
Compiler stage 4 finished in 0.0963581 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.000289917 seconds.

Compiler stage 5: Formatting code
---------------------------------
  
Compiler stage 5 finished in 0.000469208 seconds.

FFC finished in 0.175229 seconds.
Output written to ./P1Space.h.
