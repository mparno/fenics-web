This is FFC, the FEniCS Form Compiler, version 1.3.0.
For further information, visit http://www.fenics.org/ffc/.

Compiling form Conditional

Compiler stage 1: Analyzing form(s)
-----------------------------------
  
  Name:                   'a'
  Cell:                   <triangle cell in 2D>
  Topological dimension:  2
  Geometric dimension:    2
  Rank:                   2
  Number of coefficients: 0
  Arguments:              '[v_{-2}, v_{-1}]'
  Coefficients:           '[]'
  Argument names:         '[v, u]'
  Coefficient names:      '[]'
  Unique elements:        'CG2(?)'
  Unique sub elements:    'CG2(?)'
  Domains:                (Domain(Cell('triangle', 2), 'triangle_multiverse', 2, 2),
                          )
  Top level domains:      (Domain(Cell('triangle', 2), 'triangle_multiverse', 2, 2),
                          )
  
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Estimated cost of tensor representation: 2
  representation:    auto --> tensor
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
  Name:                   'L'
  Cell:                   <triangle cell in 2D>
  Topological dimension:  2
  Geometric dimension:    2
  Rank:                   1
  Number of coefficients: 0
  Arguments:              '[v_{-2}]'
  Coefficients:           '[]'
  Argument names:         '[v]'
  Coefficient names:      '[]'
  Unique elements:        'CG2(?)'
  Unique sub elements:    'CG2(?)'
  Domains:                (Domain(Cell('triangle', 2), 'triangle_multiverse', 2, 2),
                          )
  Top level domains:      (Domain(Cell('triangle', 2), 'triangle_multiverse', 2, 2),
                          )
  
  Extracting monomial form representation from UFL form
  Monomial extraction failed: No handler defined for terminal SpatialCoordinate.
  Estimated cost of tensor representation: -1
  representation:    auto --> quadrature
  Selecting quadrature degree based on total polynomial degree of integrand: 2
  quadrature_degree: auto --> 2
  quadrature_rule:   auto --> default
  
Compiler stage 1 finished in 0.0158551 seconds.

Compiler stage 2: Computing intermediate representation
-------------------------------------------------------
  Computing representation of 1 elements
  Reusing element from cache
  Reusing element from cache
  Computing representation of 1 dofmaps
  Reusing element from cache
  Computing representation of integrals
  Computing tensor representation
  Extracting monomial form representation from UFL form
  Transforming monomial form to reference element
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  Precomputing integrals on reference element
  Reusing element from cache
  144 entries computed in 0.0012 seconds
  Shape of reference tensor: (6, 6, 2, 2)
  Primary multi index:   rank = 2 dims = [6, 6] indices = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5]]
  Secondary multi index: rank = 2 dims = [2, 2] indices = [[0, 0], [0, 1], [1, 0], [1, 1]]
  Internal multi index:  rank = 0 dims = [] indices = [[]]
  Secondary multi index: rank = 2 dims = [2, 2] indices = [[0, 0], [0, 1], [1, 0], [1, 1]]
  External multi index:  rank = 1 dims = [2] indices = [[0], [1]]
  Computing quadrature representation
  Reusing element from cache
  Reusing element from cache
  Reusing element from cache
  
  QG-utils, psi_tables:
  {3: {FiniteElement('Lagrange', Domain(Cell('triangle', 2), 'triangle_multiverse', 2, 2), 2, None): {None: {None: {(0, 0): array([[0.2222222222222224, -0.11111111111111106, -0.1111111111111111],
         [-0.11111111111111109, -0.11111111111111105, 0.22222222222222213],
         [-0.11111111111111106, 0.22222222222222224, -0.11111111111111105],
         [0.11111111111111108, 0.44444444444444414, 0.44444444444444414],
         [0.44444444444444425, 0.44444444444444448, 0.11111111111111113],
         [0.44444444444444431, 0.11111111111111108, 0.44444444444444442]], dtype=object)}}}}}
  
  QG-utils, psi_tables, flat_tables:
  {'FE0': array([[0.2222222222222224, -0.11111111111111109, -0.11111111111111106,
          0.11111111111111108, 0.44444444444444425, 0.44444444444444431],
         [-0.11111111111111106, -0.11111111111111105, 0.22222222222222224,
          0.44444444444444414, 0.44444444444444448, 0.11111111111111108],
         [-0.1111111111111111, 0.22222222222222213, -0.11111111111111105,
          0.44444444444444414, 0.11111111111111113, 0.44444444444444442]], dtype=object)}
  
  tables: {'FE0': array([[0.2222222222222224, -0.11111111111111109, -0.11111111111111106,
          0.11111111111111108, 0.44444444444444425, 0.44444444444444431],
         [-0.11111111111111106, -0.11111111111111105, 0.22222222222222224,
          0.44444444444444414, 0.44444444444444448, 0.11111111111111108],
         [-0.1111111111111111, 0.22222222222222213, -0.11111111111111105,
          0.44444444444444414, 0.11111111111111113, 0.44444444444444442]], dtype=object)}
  
  name_map: {}
  
  inv_name_map: {'FE0': 'FE0'}
  
  QG-utils, psi_tables, unique_tables:
  {'FE0': array([[0.2222222222222224, -0.11111111111111109, -0.11111111111111106,
          0.11111111111111108, 0.44444444444444425, 0.44444444444444431],
         [-0.11111111111111106, -0.11111111111111105, 0.22222222222222224,
          0.44444444444444414, 0.44444444444444448, 0.11111111111111108],
         [-0.1111111111111111, 0.22222222222222213, -0.11111111111111105,
          0.44444444444444414, 0.11111111111111113, 0.44444444444444442]], dtype=object)}
  
  QG-utils, psi_tables, name_map:
  {'FE0': ('FE0', (), False, False)}
  Transforming cell integral
  Reusing element from cache
  Reusing element from cache
  Computing representation of forms
  
Compiler stage 2 finished in 0.010289 seconds.

Compiler stage 3: Optimizing intermediate representation
--------------------------------------------------------
  FErari not installed, skipping tensor optimizations
  Optimising expressions for cell integral
  
Compiler stage 3 finished in 0.00040102 seconds.

Compiler stage 4: Generating code
---------------------------------
  Generating code for 1 element(s)
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Removing unused variable: tmp7
  Removing unused variable: tmp6
  Removing unused variable: tmp5
  Removing unused variable: tt
  Removing unused variable: ss
  Removing unused variable: rr
  Generating code for 1 dofmap(s)
  Generating code for integrals
  Removing unused variable: circumradius
  Removing unused variable: v0v1
  Removing unused variable: v0v2
  Removing unused variable: v1v2
  Removing unused variable: volume
  Cell, number of operations to compute tensor: 144
  Generating code for forms
  
Compiler stage 4 finished in 0.0616841 seconds.

Compiler stage 4.1: Generating additional wrapper code
------------------------------------------------------
  Generating wrapper code for DOLFIN
  
Compiler stage 4.1 finished in 0.000345945 seconds.

Compiler stage 5: Formatting code
---------------------------------
  Output written to ./Conditional.h.
  
Compiler stage 5 finished in 0.00049305 seconds.

[1;37;32mFFC finished in 0.0893059 seconds.[0m
