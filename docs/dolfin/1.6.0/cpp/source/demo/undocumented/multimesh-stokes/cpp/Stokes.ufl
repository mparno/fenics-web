# Copyright (C) 2014 Anders Logg
#
# This file is part of DOLFIN.
#
# DOLFIN is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DOLFIN is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with DOLFIN. If not, see <http://www.gnu.org/licenses/>.
#
# First added:  2014-06-10
# Last changed: 2014-06-11
#
# The bilinear form a(u, v) and linear form L(v) for a standard
# formulation of the Stokes equations.
#
# Compile this form with FFC: ffc -l dolfin Stokes.ufl.

# Define element
P2 = VectorElement("Lagrange", triangle, 2)
P1 = FiniteElement("Lagrange", triangle, 1)
TH = P2 * P1

# Define trial and test functions and right-hand side
(u, p) = TrialFunctions(TH)
(v, q) = TestFunctions(TH)
f = Coefficient(P2)

# Define facet normal
n = FacetNormal(triangle)

def tensor_jump(v, n):
    return outer(v('+'), n('+')) + outer(v('-'), n('-'))

def a_h(v, w):
    return inner(grad(v), grad(w))*dx

def b_h(v, q):
    return -div(v)*q*dx

# Bilinear form
a = a_h(u, v) + b_h(v, p) + b_h(u, q)

# Linear form
L = dot(f, v)*dx
